/*
 * generated by Xtext 2.35.0
 */
grammar InternalVsdl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package it.csec.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.csec.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import it.csec.xtext.services.VsdlGrammarAccess;

}
@parser::members {
	private VsdlGrammarAccess grammarAccess;

	public void setGrammarAccess(VsdlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenElem
entryRuleScenElem
:
{ before(grammarAccess.getScenElemRule()); }
	 ruleScenElem
{ after(grammarAccess.getScenElemRule()); } 
	 EOF 
;

// Rule ScenElem
ruleScenElem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenElemAccess().getAlternatives()); }
		(rule__ScenElem__Alternatives)
		{ after(grammarAccess.getScenElemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getGroup()); }
		(rule__Node__Group__0)
		{ after(grammarAccess.getNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeConstraint
entryRuleNodeConstraint
:
{ before(grammarAccess.getNodeConstraintRule()); }
	 ruleNodeConstraint
{ after(grammarAccess.getNodeConstraintRule()); } 
	 EOF 
;

// Rule NodeConstraint
ruleNodeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeConstraintAccess().getAlternatives()); }
		(rule__NodeConstraint__Alternatives)
		{ after(grammarAccess.getNodeConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGuardedNodeConstraint
entryRuleGuardedNodeConstraint
:
{ before(grammarAccess.getGuardedNodeConstraintRule()); }
	 ruleGuardedNodeConstraint
{ after(grammarAccess.getGuardedNodeConstraintRule()); } 
	 EOF 
;

// Rule GuardedNodeConstraint
ruleGuardedNodeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGuardedNodeConstraintAccess().getGroup()); }
		(rule__GuardedNodeConstraint__Group__0)
		{ after(grammarAccess.getGuardedNodeConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNodeConstraint
entryRuleSimpleNodeConstraint
:
{ before(grammarAccess.getSimpleNodeConstraintRule()); }
	 ruleSimpleNodeConstraint
{ after(grammarAccess.getSimpleNodeConstraintRule()); } 
	 EOF 
;

// Rule SimpleNodeConstraint
ruleSimpleNodeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNodeConstraintAccess().getSimpleNodeConstraintAndOrParserRuleCall()); }
		ruleSimpleNodeConstraintAndOr
		{ after(grammarAccess.getSimpleNodeConstraintAccess().getSimpleNodeConstraintAndOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNodeConstraintAndOr
entryRuleSimpleNodeConstraintAndOr
:
{ before(grammarAccess.getSimpleNodeConstraintAndOrRule()); }
	 ruleSimpleNodeConstraintAndOr
{ after(grammarAccess.getSimpleNodeConstraintAndOrRule()); } 
	 EOF 
;

// Rule SimpleNodeConstraintAndOr
ruleSimpleNodeConstraintAndOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getGroup()); }
		(rule__SimpleNodeConstraintAndOr__Group__0)
		{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNodeConstraintNot
entryRuleSimpleNodeConstraintNot
:
{ before(grammarAccess.getSimpleNodeConstraintNotRule()); }
	 ruleSimpleNodeConstraintNot
{ after(grammarAccess.getSimpleNodeConstraintNotRule()); } 
	 EOF 
;

// Rule SimpleNodeConstraintNot
ruleSimpleNodeConstraintNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNodeConstraintNotAccess().getAlternatives()); }
		(rule__SimpleNodeConstraintNot__Alternatives)
		{ after(grammarAccess.getSimpleNodeConstraintNotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNodeConstraintA
entryRuleSimpleNodeConstraintA
:
{ before(grammarAccess.getSimpleNodeConstraintARule()); }
	 ruleSimpleNodeConstraintA
{ after(grammarAccess.getSimpleNodeConstraintARule()); } 
	 EOF 
;

// Rule SimpleNodeConstraintA
ruleSimpleNodeConstraintA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNodeConstraintAAccess().getAlternatives()); }
		(rule__SimpleNodeConstraintA__Alternatives)
		{ after(grammarAccess.getSimpleNodeConstraintAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeHardwareConstraintA
entryRuleNodeHardwareConstraintA
:
{ before(grammarAccess.getNodeHardwareConstraintARule()); }
	 ruleNodeHardwareConstraintA
{ after(grammarAccess.getNodeHardwareConstraintARule()); } 
	 EOF 
;

// Rule NodeHardwareConstraintA
ruleNodeHardwareConstraintA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getAlternatives()); }
		(rule__NodeHardwareConstraintA__Alternatives)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeNetworkConstraintA
entryRuleNodeNetworkConstraintA
:
{ before(grammarAccess.getNodeNetworkConstraintARule()); }
	 ruleNodeNetworkConstraintA
{ after(grammarAccess.getNodeNetworkConstraintARule()); } 
	 EOF 
;

// Rule NodeNetworkConstraintA
ruleNodeNetworkConstraintA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getAlternatives()); }
		(rule__NodeNetworkConstraintA__Alternatives)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeSoftwareConstraintA
entryRuleNodeSoftwareConstraintA
:
{ before(grammarAccess.getNodeSoftwareConstraintARule()); }
	 ruleNodeSoftwareConstraintA
{ after(grammarAccess.getNodeSoftwareConstraintARule()); } 
	 EOF 
;

// Rule NodeSoftwareConstraintA
ruleNodeSoftwareConstraintA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getAlternatives()); }
		(rule__NodeSoftwareConstraintA__Alternatives)
		{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSoftwareInstallation
entryRuleSoftwareInstallation
:
{ before(grammarAccess.getSoftwareInstallationRule()); }
	 ruleSoftwareInstallation
{ after(grammarAccess.getSoftwareInstallationRule()); } 
	 EOF 
;

// Rule SoftwareInstallation
ruleSoftwareInstallation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoftwareInstallationAccess().getGroup()); }
		(rule__SoftwareInstallation__Group__0)
		{ after(grammarAccess.getSoftwareInstallationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVersionNumber
entryRuleVersionNumber
:
{ before(grammarAccess.getVersionNumberRule()); }
	 ruleVersionNumber
{ after(grammarAccess.getVersionNumberRule()); } 
	 EOF 
;

// Rule VersionNumber
ruleVersionNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVersionNumberAccess().getGroup()); }
		(rule__VersionNumber__Group__0)
		{ after(grammarAccess.getVersionNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSoftwareDependency
entryRuleSoftwareDependency
:
{ before(grammarAccess.getSoftwareDependencyRule()); }
	 ruleSoftwareDependency
{ after(grammarAccess.getSoftwareDependencyRule()); } 
	 EOF 
;

// Rule SoftwareDependency
ruleSoftwareDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoftwareDependencyAccess().getDependencyIDAssignment()); }
		(rule__SoftwareDependency__DependencyIDAssignment)
		{ after(grammarAccess.getSoftwareDependencyAccess().getDependencyIDAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigOptions
entryRuleConfigOptions
:
{ before(grammarAccess.getConfigOptionsRule()); }
	 ruleConfigOptions
{ after(grammarAccess.getConfigOptionsRule()); } 
	 EOF 
;

// Rule ConfigOptions
ruleConfigOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigOptionsAccess().getGroup()); }
		(rule__ConfigOptions__Group__0)
		{ after(grammarAccess.getConfigOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigPair
entryRuleConfigPair
:
{ before(grammarAccess.getConfigPairRule()); }
	 ruleConfigPair
{ after(grammarAccess.getConfigPairRule()); } 
	 EOF 
;

// Rule ConfigPair
ruleConfigPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigPairAccess().getGroup()); }
		(rule__ConfigPair__Group__0)
		{ after(grammarAccess.getConfigPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNetwork
entryRuleNetwork
:
{ before(grammarAccess.getNetworkRule()); }
	 ruleNetwork
{ after(grammarAccess.getNetworkRule()); } 
	 EOF 
;

// Rule Network
ruleNetwork 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNetworkAccess().getGroup()); }
		(rule__Network__Group__0)
		{ after(grammarAccess.getNetworkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNetworkConstraint
entryRuleNetworkConstraint
:
{ before(grammarAccess.getNetworkConstraintRule()); }
	 ruleNetworkConstraint
{ after(grammarAccess.getNetworkConstraintRule()); } 
	 EOF 
;

// Rule NetworkConstraint
ruleNetworkConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNetworkConstraintAccess().getAlternatives()); }
		(rule__NetworkConstraint__Alternatives)
		{ after(grammarAccess.getNetworkConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGuardedNetworkConstraint
entryRuleGuardedNetworkConstraint
:
{ before(grammarAccess.getGuardedNetworkConstraintRule()); }
	 ruleGuardedNetworkConstraint
{ after(grammarAccess.getGuardedNetworkConstraintRule()); } 
	 EOF 
;

// Rule GuardedNetworkConstraint
ruleGuardedNetworkConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGuardedNetworkConstraintAccess().getGroup()); }
		(rule__GuardedNetworkConstraint__Group__0)
		{ after(grammarAccess.getGuardedNetworkConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNetworkConstraint
entryRuleSimpleNetworkConstraint
:
{ before(grammarAccess.getSimpleNetworkConstraintRule()); }
	 ruleSimpleNetworkConstraint
{ after(grammarAccess.getSimpleNetworkConstraintRule()); } 
	 EOF 
;

// Rule SimpleNetworkConstraint
ruleSimpleNetworkConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAccess().getSimpleNetworkConstraintAndOrParserRuleCall()); }
		ruleSimpleNetworkConstraintAndOr
		{ after(grammarAccess.getSimpleNetworkConstraintAccess().getSimpleNetworkConstraintAndOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNetworkConstraintAndOr
entryRuleSimpleNetworkConstraintAndOr
:
{ before(grammarAccess.getSimpleNetworkConstraintAndOrRule()); }
	 ruleSimpleNetworkConstraintAndOr
{ after(grammarAccess.getSimpleNetworkConstraintAndOrRule()); } 
	 EOF 
;

// Rule SimpleNetworkConstraintAndOr
ruleSimpleNetworkConstraintAndOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getGroup()); }
		(rule__SimpleNetworkConstraintAndOr__Group__0)
		{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNetworkConstraintNot
entryRuleSimpleNetworkConstraintNot
:
{ before(grammarAccess.getSimpleNetworkConstraintNotRule()); }
	 ruleSimpleNetworkConstraintNot
{ after(grammarAccess.getSimpleNetworkConstraintNotRule()); } 
	 EOF 
;

// Rule SimpleNetworkConstraintNot
ruleSimpleNetworkConstraintNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintNotAccess().getAlternatives()); }
		(rule__SimpleNetworkConstraintNot__Alternatives)
		{ after(grammarAccess.getSimpleNetworkConstraintNotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleNetworkConstraintA
entryRuleSimpleNetworkConstraintA
:
{ before(grammarAccess.getSimpleNetworkConstraintARule()); }
	 ruleSimpleNetworkConstraintA
{ after(grammarAccess.getSimpleNetworkConstraintARule()); } 
	 EOF 
;

// Rule SimpleNetworkConstraintA
ruleSimpleNetworkConstraintA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAAccess().getAlternatives()); }
		(rule__SimpleNetworkConstraintA__Alternatives)
		{ after(grammarAccess.getSimpleNetworkConstraintAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNetworkGatewayConstraint
entryRuleNetworkGatewayConstraint
:
{ before(grammarAccess.getNetworkGatewayConstraintRule()); }
	 ruleNetworkGatewayConstraint
{ after(grammarAccess.getNetworkGatewayConstraintRule()); } 
	 EOF 
;

// Rule NetworkGatewayConstraint
ruleNetworkGatewayConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNetworkGatewayConstraintAccess().getAlternatives()); }
		(rule__NetworkGatewayConstraint__Alternatives)
		{ after(grammarAccess.getNetworkGatewayConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNetworkParticipantsConstraint
entryRuleNetworkParticipantsConstraint
:
{ before(grammarAccess.getNetworkParticipantsConstraintRule()); }
	 ruleNetworkParticipantsConstraint
{ after(grammarAccess.getNetworkParticipantsConstraintRule()); } 
	 EOF 
;

// Rule NetworkParticipantsConstraint
ruleNetworkParticipantsConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getAlternatives()); }
		(rule__NetworkParticipantsConstraint__Alternatives)
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateTriggerConstraint
entryRuleUpdateTriggerConstraint
:
{ before(grammarAccess.getUpdateTriggerConstraintRule()); }
	 ruleUpdateTriggerConstraint
{ after(grammarAccess.getUpdateTriggerConstraintRule()); } 
	 EOF 
;

// Rule UpdateTriggerConstraint
ruleUpdateTriggerConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAccess().getUpdateTriggerConstraintAndOrParserRuleCall()); }
		ruleUpdateTriggerConstraintAndOr
		{ after(grammarAccess.getUpdateTriggerConstraintAccess().getUpdateTriggerConstraintAndOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateTriggerConstraintAndOr
entryRuleUpdateTriggerConstraintAndOr
:
{ before(grammarAccess.getUpdateTriggerConstraintAndOrRule()); }
	 ruleUpdateTriggerConstraintAndOr
{ after(grammarAccess.getUpdateTriggerConstraintAndOrRule()); } 
	 EOF 
;

// Rule UpdateTriggerConstraintAndOr
ruleUpdateTriggerConstraintAndOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getGroup()); }
		(rule__UpdateTriggerConstraintAndOr__Group__0)
		{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateTriggerConstraintNot
entryRuleUpdateTriggerConstraintNot
:
{ before(grammarAccess.getUpdateTriggerConstraintNotRule()); }
	 ruleUpdateTriggerConstraintNot
{ after(grammarAccess.getUpdateTriggerConstraintNotRule()); } 
	 EOF 
;

// Rule UpdateTriggerConstraintNot
ruleUpdateTriggerConstraintNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintNotAccess().getAlternatives()); }
		(rule__UpdateTriggerConstraintNot__Alternatives)
		{ after(grammarAccess.getUpdateTriggerConstraintNotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateTriggerConstraintA
entryRuleUpdateTriggerConstraintA
:
{ before(grammarAccess.getUpdateTriggerConstraintARule()); }
	 ruleUpdateTriggerConstraintA
{ after(grammarAccess.getUpdateTriggerConstraintARule()); } 
	 EOF 
;

// Rule UpdateTriggerConstraintA
ruleUpdateTriggerConstraintA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getAlternatives()); }
		(rule__UpdateTriggerConstraintA__Alternatives)
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeExpr
entryRuleTimeExpr
:
{ before(grammarAccess.getTimeExprRule()); }
	 ruleTimeExpr
{ after(grammarAccess.getTimeExprRule()); } 
	 EOF 
;

// Rule TimeExpr
ruleTimeExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeExprAccess().getTimeExprAdditionParserRuleCall()); }
		ruleTimeExprAddition
		{ after(grammarAccess.getTimeExprAccess().getTimeExprAdditionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeExprAddition
entryRuleTimeExprAddition
:
{ before(grammarAccess.getTimeExprAdditionRule()); }
	 ruleTimeExprAddition
{ after(grammarAccess.getTimeExprAdditionRule()); } 
	 EOF 
;

// Rule TimeExprAddition
ruleTimeExprAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeExprAdditionAccess().getGroup()); }
		(rule__TimeExprAddition__Group__0)
		{ after(grammarAccess.getTimeExprAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeExprMultiplication
entryRuleTimeExprMultiplication
:
{ before(grammarAccess.getTimeExprMultiplicationRule()); }
	 ruleTimeExprMultiplication
{ after(grammarAccess.getTimeExprMultiplicationRule()); } 
	 EOF 
;

// Rule TimeExprMultiplication
ruleTimeExprMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeExprMultiplicationAccess().getGroup()); }
		(rule__TimeExprMultiplication__Group__0)
		{ after(grammarAccess.getTimeExprMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeExprA
entryRuleTimeExprA
:
{ before(grammarAccess.getTimeExprARule()); }
	 ruleTimeExprA
{ after(grammarAccess.getTimeExprARule()); } 
	 EOF 
;

// Rule TimeExprA
ruleTimeExprA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeExprAAccess().getAlternatives()); }
		(rule__TimeExprA__Alternatives)
		{ after(grammarAccess.getTimeExprAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeInterval
entryRuleTimeInterval
:
{ before(grammarAccess.getTimeIntervalRule()); }
	 ruleTimeInterval
{ after(grammarAccess.getTimeIntervalRule()); } 
	 EOF 
;

// Rule TimeInterval
ruleTimeInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeIntervalAccess().getValueAssignment()); }
		(rule__TimeInterval__ValueAssignment)
		{ after(grammarAccess.getTimeIntervalAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCPUFrequency
entryRuleCPUFrequency
:
{ before(grammarAccess.getCPUFrequencyRule()); }
	 ruleCPUFrequency
{ after(grammarAccess.getCPUFrequencyRule()); } 
	 EOF 
;

// Rule CPUFrequency
ruleCPUFrequency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCPUFrequencyAccess().getGroup()); }
		(rule__CPUFrequency__Group__0)
		{ after(grammarAccess.getCPUFrequencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskSize
entryRuleDiskSize
:
{ before(grammarAccess.getDiskSizeRule()); }
	 ruleDiskSize
{ after(grammarAccess.getDiskSizeRule()); } 
	 EOF 
;

// Rule DiskSize
ruleDiskSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskSizeAccess().getGroup()); }
		(rule__DiskSize__Group__0)
		{ after(grammarAccess.getDiskSizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRamSize
entryRuleRamSize
:
{ before(grammarAccess.getRamSizeRule()); }
	 ruleRamSize
{ after(grammarAccess.getRamSizeRule()); } 
	 EOF 
;

// Rule RamSize
ruleRamSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRamSizeAccess().getGroup()); }
		(rule__RamSize__Group__0)
		{ after(grammarAccess.getRamSizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIPAddress
entryRuleIPAddress
:
{ before(grammarAccess.getIPAddressRule()); }
	 ruleIPAddress
{ after(grammarAccess.getIPAddressRule()); } 
	 EOF 
;

// Rule IPAddress
ruleIPAddress 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIPAddressAccess().getGroup()); }
		(rule__IPAddress__Group__0)
		{ after(grammarAccess.getIPAddressAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIPRangeA
entryRuleIPRangeA
:
{ before(grammarAccess.getIPRangeARule()); }
	 ruleIPRangeA
{ after(grammarAccess.getIPRangeARule()); } 
	 EOF 
;

// Rule IPRangeA
ruleIPRangeA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIPRangeAAccess().getGroup()); }
		(rule__IPRangeA__Group__0)
		{ after(grammarAccess.getIPRangeAAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOSVersionE
entryRuleOSVersionE
:
{ before(grammarAccess.getOSVersionERule()); }
	 ruleOSVersionE
{ after(grammarAccess.getOSVersionERule()); } 
	 EOF 
;

// Rule OSVersionE
ruleOSVersionE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOSVersionEAccess().getAlternatives()); }
		(rule__OSVersionE__Alternatives)
		{ after(grammarAccess.getOSVersionEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOSFamilyE
entryRuleOSFamilyE
:
{ before(grammarAccess.getOSFamilyERule()); }
	 ruleOSFamilyE
{ after(grammarAccess.getOSFamilyERule()); } 
	 EOF 
;

// Rule OSFamilyE
ruleOSFamilyE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOSFamilyEAccess().getAlternatives()); }
		(rule__OSFamilyE__Alternatives)
		{ after(grammarAccess.getOSFamilyEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule HardwareProfile
ruleHardwareProfile
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHardwareProfileAccess().getAlternatives()); }
		(rule__HardwareProfile__Alternatives)
		{ after(grammarAccess.getHardwareProfileAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenElem__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenElemAccess().getNodeParserRuleCall_0()); }
		ruleNode
		{ after(grammarAccess.getScenElemAccess().getNodeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getScenElemAccess().getNetworkParserRuleCall_1()); }
		ruleNetwork
		{ after(grammarAccess.getScenElemAccess().getNetworkParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeConstraintAccess().getGroup_0()); }
		(rule__NodeConstraint__Group_0__0)
		{ after(grammarAccess.getNodeConstraintAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeConstraintAccess().getGroup_1()); }
		(rule__NodeConstraint__Group_1__0)
		{ after(grammarAccess.getNodeConstraintAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0()); }
		'and'
		{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1()); }
		'or'
		{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintNot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNodeConstraintNotAccess().getGroup_0()); }
		(rule__SimpleNodeConstraintNot__Group_0__0)
		{ after(grammarAccess.getSimpleNodeConstraintNotAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNodeConstraintNotAccess().getSimpleNodeConstraintAParserRuleCall_1()); }
		ruleSimpleNodeConstraintA
		{ after(grammarAccess.getSimpleNodeConstraintNotAccess().getSimpleNodeConstraintAParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNodeConstraintAAccess().getGroup_0()); }
		(rule__SimpleNodeConstraintA__Group_0__0)
		{ after(grammarAccess.getSimpleNodeConstraintAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNodeConstraintAAccess().getNodeHardwareConstraintAParserRuleCall_1()); }
		ruleNodeHardwareConstraintA
		{ after(grammarAccess.getSimpleNodeConstraintAAccess().getNodeHardwareConstraintAParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNodeConstraintAAccess().getNodeSoftwareConstraintAParserRuleCall_2()); }
		ruleNodeSoftwareConstraintA
		{ after(grammarAccess.getSimpleNodeConstraintAAccess().getNodeSoftwareConstraintAParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNodeConstraintAAccess().getNodeNetworkConstraintAParserRuleCall_3()); }
		ruleNodeNetworkConstraintA
		{ after(grammarAccess.getSimpleNodeConstraintAAccess().getNodeNetworkConstraintAParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_0()); }
		(rule__NodeHardwareConstraintA__Group_0__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_1()); }
		(rule__NodeHardwareConstraintA__Group_1__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_2()); }
		(rule__NodeHardwareConstraintA__Group_2__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_3()); }
		(rule__NodeHardwareConstraintA__Group_3__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_4()); }
		(rule__NodeHardwareConstraintA__Group_4__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_5()); }
		(rule__NodeHardwareConstraintA__Group_5__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_6()); }
		(rule__NodeHardwareConstraintA__Group_6__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_7()); }
		(rule__NodeHardwareConstraintA__Group_7__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_8()); }
		(rule__NodeHardwareConstraintA__Group_8__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_9()); }
		(rule__NodeHardwareConstraintA__Group_9__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_10()); }
		(rule__NodeHardwareConstraintA__Group_10__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_10()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_11()); }
		(rule__NodeHardwareConstraintA__Group_11__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_11()); }
	)
	|
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_12()); }
		(rule__NodeHardwareConstraintA__Group_12__0)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getGroup_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_0()); }
		(rule__NodeNetworkConstraintA__Group_0__0)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_1()); }
		(rule__NodeNetworkConstraintA__Group_1__0)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_2()); }
		(rule__NodeNetworkConstraintA__Group_2__0)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_3()); }
		(rule__NodeNetworkConstraintA__Group_3__0)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_4()); }
		(rule__NodeNetworkConstraintA__Group_4__0)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getGroup_0()); }
		(rule__NodeSoftwareConstraintA__Group_0__0)
		{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getGroup_1()); }
		(rule__NodeSoftwareConstraintA__Group_1__0)
		{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getGroup_2()); }
		(rule__NodeSoftwareConstraintA__Group_2__0)
		{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkConstraintAccess().getGroup_0()); }
		(rule__NetworkConstraint__Group_0__0)
		{ after(grammarAccess.getNetworkConstraintAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNetworkConstraintAccess().getGroup_1()); }
		(rule__NetworkConstraint__Group_1__0)
		{ after(grammarAccess.getNetworkConstraintAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0()); }
		'and'
		{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1()); }
		'or'
		{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintNot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintNotAccess().getGroup_0()); }
		(rule__SimpleNetworkConstraintNot__Group_0__0)
		{ after(grammarAccess.getSimpleNetworkConstraintNotAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNetworkConstraintNotAccess().getSimpleNetworkConstraintAParserRuleCall_1()); }
		ruleSimpleNetworkConstraintA
		{ after(grammarAccess.getSimpleNetworkConstraintNotAccess().getSimpleNetworkConstraintAParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAAccess().getGroup_0()); }
		(rule__SimpleNetworkConstraintA__Group_0__0)
		{ after(grammarAccess.getSimpleNetworkConstraintAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAAccess().getNetworkGatewayConstraintParserRuleCall_1()); }
		ruleNetworkGatewayConstraint
		{ after(grammarAccess.getSimpleNetworkConstraintAAccess().getNetworkGatewayConstraintParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAAccess().getNetworkParticipantsConstraintParserRuleCall_2()); }
		ruleNetworkParticipantsConstraint
		{ after(grammarAccess.getSimpleNetworkConstraintAAccess().getNetworkParticipantsConstraintParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkGatewayConstraintAccess().getGroup_0()); }
		(rule__NetworkGatewayConstraint__Group_0__0)
		{ after(grammarAccess.getNetworkGatewayConstraintAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNetworkGatewayConstraintAccess().getGroup_1()); }
		(rule__NetworkGatewayConstraint__Group_1__0)
		{ after(grammarAccess.getNetworkGatewayConstraintAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getGroup_0()); }
		(rule__NetworkParticipantsConstraint__Group_0__0)
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getGroup_1()); }
		(rule__NetworkParticipantsConstraint__Group_1__0)
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0()); }
		'and'
		{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1()); }
		'or'
		{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintNot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintNotAccess().getGroup_0()); }
		(rule__UpdateTriggerConstraintNot__Group_0__0)
		{ after(grammarAccess.getUpdateTriggerConstraintNotAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateTriggerConstraintNotAccess().getUpdateTriggerConstraintAParserRuleCall_1()); }
		ruleUpdateTriggerConstraintA
		{ after(grammarAccess.getUpdateTriggerConstraintNotAccess().getUpdateTriggerConstraintAParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_0()); }
		(rule__UpdateTriggerConstraintA__Group_0__0)
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_1()); }
		(rule__UpdateTriggerConstraintA__Group_1__0)
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_2()); }
		(rule__UpdateTriggerConstraintA__Group_2__0)
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_3()); }
		(rule__UpdateTriggerConstraintA__Group_3__0)
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__OpAlternatives_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }
		'+'
		{ after(grammarAccess.getTimeExprAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeExprAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }
		'-'
		{ after(grammarAccess.getTimeExprAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprAAccess().getGroup_0()); }
		(rule__TimeExprA__Group_0__0)
		{ after(grammarAccess.getTimeExprAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeExprAAccess().getVariableAssignment_1()); }
		(rule__TimeExprA__VariableAssignment_1)
		{ after(grammarAccess.getTimeExprAAccess().getVariableAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeExprAAccess().getIntervalAssignment_2()); }
		(rule__TimeExprA__IntervalAssignment_2)
		{ after(grammarAccess.getTimeExprAAccess().getIntervalAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CPUFrequency__UnitAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCPUFrequencyAccess().getUnitMHzKeyword_1_0_0()); }
		'MHz'
		{ after(grammarAccess.getCPUFrequencyAccess().getUnitMHzKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCPUFrequencyAccess().getUnitGHzKeyword_1_0_1()); }
		'GHz'
		{ after(grammarAccess.getCPUFrequencyAccess().getUnitGHzKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCPUFrequencyAccess().getUnitTHzKeyword_1_0_2()); }
		'THz'
		{ after(grammarAccess.getCPUFrequencyAccess().getUnitTHzKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSize__UnitAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSizeAccess().getUnitMBKeyword_1_0_0()); }
		'MB'
		{ after(grammarAccess.getDiskSizeAccess().getUnitMBKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDiskSizeAccess().getUnitGBKeyword_1_0_1()); }
		'GB'
		{ after(grammarAccess.getDiskSizeAccess().getUnitGBKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDiskSizeAccess().getUnitTBKeyword_1_0_2()); }
		'TB'
		{ after(grammarAccess.getDiskSizeAccess().getUnitTBKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RamSize__UnitAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRamSizeAccess().getUnitMBKeyword_1_0_0()); }
		'MB'
		{ after(grammarAccess.getRamSizeAccess().getUnitMBKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRamSizeAccess().getUnitGBKeyword_1_0_1()); }
		'GB'
		{ after(grammarAccess.getRamSizeAccess().getUnitGBKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRamSizeAccess().getUnitTBKeyword_1_0_2()); }
		'TB'
		{ after(grammarAccess.getRamSizeAccess().getUnitTBKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OSVersionE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOSVersionEAccess().getWindowsXPKeyword_0()); }
		'WindowsXP'
		{ after(grammarAccess.getOSVersionEAccess().getWindowsXPKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOSVersionEAccess().getWindows7Keyword_1()); }
		'Windows7'
		{ after(grammarAccess.getOSVersionEAccess().getWindows7Keyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOSVersionEAccess().getWindows8Keyword_2()); }
		'Windows8'
		{ after(grammarAccess.getOSVersionEAccess().getWindows8Keyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOSVersionEAccess().getWindows10Keyword_3()); }
		'Windows10'
		{ after(grammarAccess.getOSVersionEAccess().getWindows10Keyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOSVersionEAccess().getUbuntu14Keyword_4()); }
		'Ubuntu14'
		{ after(grammarAccess.getOSVersionEAccess().getUbuntu14Keyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOSVersionEAccess().getUbuntu16Keyword_5()); }
		'Ubuntu16'
		{ after(grammarAccess.getOSVersionEAccess().getUbuntu16Keyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOSVersionEAccess().getAndroid21Keyword_6()); }
		'Android-21'
		{ after(grammarAccess.getOSVersionEAccess().getAndroid21Keyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOSVersionEAccess().getAndroid19Keyword_7()); }
		'Android-19'
		{ after(grammarAccess.getOSVersionEAccess().getAndroid19Keyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OSFamilyE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOSFamilyEAccess().getMicrosoftKeyword_0()); }
		'Microsoft'
		{ after(grammarAccess.getOSFamilyEAccess().getMicrosoftKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOSFamilyEAccess().getLinuxKeyword_1()); }
		'Linux'
		{ after(grammarAccess.getOSFamilyEAccess().getLinuxKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOSFamilyEAccess().getOSxKeyword_2()); }
		'OSx'
		{ after(grammarAccess.getOSFamilyEAccess().getOSxKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOSFamilyEAccess().getIOSKeyword_3()); }
		'iOS'
		{ after(grammarAccess.getOSFamilyEAccess().getIOSKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOSFamilyEAccess().getAndroidKeyword_4()); }
		'Android'
		{ after(grammarAccess.getOSFamilyEAccess().getAndroidKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HardwareProfile__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHardwareProfileAccess().getTinyEnumLiteralDeclaration_0()); }
		('tiny')
		{ after(grammarAccess.getHardwareProfileAccess().getTinyEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getHardwareProfileAccess().getMediumEnumLiteralDeclaration_1()); }
		('medium')
		{ after(grammarAccess.getHardwareProfileAccess().getMediumEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getHardwareProfileAccess().getLargeEnumLiteralDeclaration_2()); }
		('large')
		{ after(grammarAccess.getHardwareProfileAccess().getLargeEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getHardwareProfileAccess().getMobileEnumLiteralDeclaration_3()); }
		('mobile')
		{ after(grammarAccess.getHardwareProfileAccess().getMobileEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getHardwareProfileAccess().getWearableEnumLiteralDeclaration_4()); }
		('wearable')
		{ after(grammarAccess.getHardwareProfileAccess().getWearableEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getHardwareProfileAccess().getSensorEnumLiteralDeclaration_5()); }
		('sensor')
		{ after(grammarAccess.getHardwareProfileAccess().getSensorEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getHardwareProfileAccess().getServerEnumLiteralDeclaration_6()); }
		('server')
		{ after(grammarAccess.getHardwareProfileAccess().getServerEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScenarioKeyword_0()); }
	'scenario'
	{ after(grammarAccess.getModelAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_2()); }
	(rule__Model__Group_2__0)?
	{ after(grammarAccess.getModelAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_4()); }
	(rule__Model__ElementsAssignment_4)*
	{ after(grammarAccess.getModelAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDurationKeyword_2_0()); }
	'duration'
	{ after(grammarAccess.getModelAccess().getDurationKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTimeToUseAssignment_2_1()); }
	(rule__Model__TimeToUseAssignment_2_1)
	{ after(grammarAccess.getModelAccess().getTimeToUseAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeKeyword_0()); }
	'node'
	{ after(grammarAccess.getNodeAccess().getNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNameAssignment_1()); }
	(rule__Node__NameAssignment_1)
	{ after(grammarAccess.getNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getConstraintsAssignment_3()); }
	(rule__Node__ConstraintsAssignment_3)*
	{ after(grammarAccess.getNodeAccess().getConstraintsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeConstraint__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeConstraint__Group_0__0__Impl
	rule__NodeConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConstraint__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeConstraintAccess().getGuardedNodeConstraintParserRuleCall_0_0()); }
	ruleGuardedNodeConstraint
	{ after(grammarAccess.getNodeConstraintAccess().getGuardedNodeConstraintParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConstraint__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeConstraint__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConstraint__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeConstraintAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getNodeConstraintAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeConstraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeConstraint__Group_1__0__Impl
	rule__NodeConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConstraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeConstraintAccess().getSimpleNodeConstraintParserRuleCall_1_0()); }
	ruleSimpleNodeConstraint
	{ after(grammarAccess.getNodeConstraintAccess().getSimpleNodeConstraintParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConstraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeConstraint__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConstraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeConstraintAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getNodeConstraintAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GuardedNodeConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNodeConstraint__Group__0__Impl
	rule__GuardedNodeConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNodeConstraintAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getGuardedNodeConstraintAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNodeConstraint__Group__1__Impl
	rule__GuardedNodeConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNodeConstraintAccess().getTriggerconstraintAssignment_1()); }
	(rule__GuardedNodeConstraint__TriggerconstraintAssignment_1)
	{ after(grammarAccess.getGuardedNodeConstraintAccess().getTriggerconstraintAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNodeConstraint__Group__2__Impl
	rule__GuardedNodeConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNodeConstraintAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getGuardedNodeConstraintAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNodeConstraint__Group__3__Impl
	rule__GuardedNodeConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNodeConstraintAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getGuardedNodeConstraintAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNodeConstraint__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNodeConstraintAccess().getNodeconstraintAssignment_4()); }
	(rule__GuardedNodeConstraint__NodeconstraintAssignment_4)
	{ after(grammarAccess.getGuardedNodeConstraintAccess().getNodeconstraintAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNodeConstraintAndOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintAndOr__Group__0__Impl
	rule__SimpleNodeConstraintAndOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getSimpleNodeConstraintNotParserRuleCall_0()); }
	ruleSimpleNodeConstraintNot
	{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getSimpleNodeConstraintNotParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintAndOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getGroup_1()); }
	(rule__SimpleNodeConstraintAndOr__Group_1__0)*
	{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNodeConstraintAndOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintAndOr__Group_1__0__Impl
	rule__SimpleNodeConstraintAndOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getGroup_1_0()); }
	(rule__SimpleNodeConstraintAndOr__Group_1_0__0)
	{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintAndOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getRightAssignment_1_1()); }
	(rule__SimpleNodeConstraintAndOr__RightAssignment_1_1)
	{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNodeConstraintAndOr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintAndOr__Group_1_0__0__Impl
	rule__SimpleNodeConstraintAndOr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getAndOrLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getAndOrLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintAndOr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpAssignment_1_0_1()); }
	(rule__SimpleNodeConstraintAndOr__OpAssignment_1_0_1)
	{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNodeConstraintNot__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintNot__Group_0__0__Impl
	rule__SimpleNodeConstraintNot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintNot__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintNotAccess().getNotAction_0_0()); }
	()
	{ after(grammarAccess.getSimpleNodeConstraintNotAccess().getNotAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintNot__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintNot__Group_0__1__Impl
	rule__SimpleNodeConstraintNot__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintNot__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintNotAccess().getNotKeyword_0_1()); }
	('not')
	{ after(grammarAccess.getSimpleNodeConstraintNotAccess().getNotKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintNot__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintNot__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintNot__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintNotAccess().getConstraintAssignment_0_2()); }
	(rule__SimpleNodeConstraintNot__ConstraintAssignment_0_2)
	{ after(grammarAccess.getSimpleNodeConstraintNotAccess().getConstraintAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNodeConstraintA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintA__Group_0__0__Impl
	rule__SimpleNodeConstraintA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getSimpleNodeConstraintAAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintA__Group_0__1__Impl
	rule__SimpleNodeConstraintA__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAAccess().getSimpleNodeConstraintParserRuleCall_0_1()); }
	ruleSimpleNodeConstraint
	{ after(grammarAccess.getSimpleNodeConstraintAAccess().getSimpleNodeConstraintParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintA__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNodeConstraintA__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintA__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNodeConstraintAAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getSimpleNodeConstraintAAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_0__0__Impl
	rule__NodeHardwareConstraintA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_0_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_0__1__Impl
	rule__NodeHardwareConstraintA__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_0_1()); }
	('cpu')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_0__2__Impl
	rule__NodeHardwareConstraintA__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSpeedKeyword_0_2()); }
	'speed'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSpeedKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_0__3__Impl
	rule__NodeHardwareConstraintA__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_0_3()); }
	(rule__NodeHardwareConstraintA__OpAssignment_0_3)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_0__4__Impl
	rule__NodeHardwareConstraintA__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_0_4()); }
	'to'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_0_5()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_0_5)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_1__0__Impl
	rule__NodeHardwareConstraintA__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_1_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_1__1__Impl
	rule__NodeHardwareConstraintA__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_1_1()); }
	('cpu')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_1__2__Impl
	rule__NodeHardwareConstraintA__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_1_2()); }
	(rule__NodeHardwareConstraintA__OpAssignment_1_2)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_1__3__Impl
	rule__NodeHardwareConstraintA__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_1_3()); }
	'than'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_1_4()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_1_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_2__0__Impl
	rule__NodeHardwareConstraintA__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_2_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_2__1__Impl
	rule__NodeHardwareConstraintA__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_2_1()); }
	('cpu')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_2__2__Impl
	rule__NodeHardwareConstraintA__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_2_2()); }
	(rule__NodeHardwareConstraintA__OpAssignment_2_2)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_2__3__Impl
	rule__NodeHardwareConstraintA__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_2_3()); }
	'than'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_2_4()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_2_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_3__0__Impl
	rule__NodeHardwareConstraintA__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_3_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_3__1__Impl
	rule__NodeHardwareConstraintA__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_3_1()); }
	('cpu')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_3__2__Impl
	rule__NodeHardwareConstraintA__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSpeedKeyword_3_2()); }
	'speed'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSpeedKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_3__3__Impl
	rule__NodeHardwareConstraintA__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasAssignment_3_3()); }
	(rule__NodeHardwareConstraintA__SameasAssignment_3_3)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdAssignment_3_4()); }
	(rule__NodeHardwareConstraintA__IdAssignment_3_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_4__0__Impl
	rule__NodeHardwareConstraintA__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_4_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_4__1__Impl
	rule__NodeHardwareConstraintA__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_4_1()); }
	('disk')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_4__2__Impl
	rule__NodeHardwareConstraintA__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_4_2()); }
	'size'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_4__3__Impl
	rule__NodeHardwareConstraintA__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_4_3()); }
	(rule__NodeHardwareConstraintA__OpAssignment_4_3)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_4__4__Impl
	rule__NodeHardwareConstraintA__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_4_4()); }
	'to'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_4_5()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_4_5)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_5__0__Impl
	rule__NodeHardwareConstraintA__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_5_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_5__1__Impl
	rule__NodeHardwareConstraintA__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_5_1()); }
	('disk')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_5__2__Impl
	rule__NodeHardwareConstraintA__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_5_2()); }
	(rule__NodeHardwareConstraintA__OpAssignment_5_2)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_5__3__Impl
	rule__NodeHardwareConstraintA__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_5_3()); }
	'than'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_5_4()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_5_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_6__0__Impl
	rule__NodeHardwareConstraintA__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_6_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_6__1__Impl
	rule__NodeHardwareConstraintA__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_6_1()); }
	('disk')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_6__2__Impl
	rule__NodeHardwareConstraintA__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_6_2()); }
	(rule__NodeHardwareConstraintA__OpAssignment_6_2)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_6__3__Impl
	rule__NodeHardwareConstraintA__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_6_3()); }
	'than'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_6_4()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_6_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_7__0__Impl
	rule__NodeHardwareConstraintA__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_7_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_7__1__Impl
	rule__NodeHardwareConstraintA__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_7_1()); }
	('disk')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_7__2__Impl
	rule__NodeHardwareConstraintA__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_7_2()); }
	'size'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_7__3__Impl
	rule__NodeHardwareConstraintA__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasAssignment_7_3()); }
	(rule__NodeHardwareConstraintA__SameasAssignment_7_3)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdAssignment_7_4()); }
	(rule__NodeHardwareConstraintA__IdAssignment_7_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdAssignment_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_8__0__Impl
	rule__NodeHardwareConstraintA__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_8_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_8__1__Impl
	rule__NodeHardwareConstraintA__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_8_1()); }
	('ram')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_8__2__Impl
	rule__NodeHardwareConstraintA__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_8_2()); }
	'size'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_8__3__Impl
	rule__NodeHardwareConstraintA__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_8_3()); }
	(rule__NodeHardwareConstraintA__OpAssignment_8_3)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_8__4__Impl
	rule__NodeHardwareConstraintA__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_8_4()); }
	'to'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_8__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_8__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_8_5()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_8_5)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_8_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_9__0__Impl
	rule__NodeHardwareConstraintA__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_9_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_9__1__Impl
	rule__NodeHardwareConstraintA__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_9_1()); }
	('ram')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_9__2__Impl
	rule__NodeHardwareConstraintA__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_9_2()); }
	(rule__NodeHardwareConstraintA__OpAssignment_9_2)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_9__3__Impl
	rule__NodeHardwareConstraintA__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_9_3()); }
	'than'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_9__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_9_4()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_9_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_9_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_10__0__Impl
	rule__NodeHardwareConstraintA__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_10_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_10__1__Impl
	rule__NodeHardwareConstraintA__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_10_1()); }
	('ram')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_10__2__Impl
	rule__NodeHardwareConstraintA__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_10_2()); }
	(rule__NodeHardwareConstraintA__OpAssignment_10_2)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_10__3__Impl
	rule__NodeHardwareConstraintA__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_10_3()); }
	'than'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_10_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_10__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_10_4()); }
	(rule__NodeHardwareConstraintA__ValueAssignment_10_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueAssignment_10_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_11__0__Impl
	rule__NodeHardwareConstraintA__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_11_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_11__1__Impl
	rule__NodeHardwareConstraintA__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_11_1()); }
	('ram')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_11__2__Impl
	rule__NodeHardwareConstraintA__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_11_2()); }
	'size'
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_11__3__Impl
	rule__NodeHardwareConstraintA__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasAssignment_11_3()); }
	(rule__NodeHardwareConstraintA__SameasAssignment_11_3)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasAssignment_11_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_11__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_11__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdAssignment_11_4()); }
	(rule__NodeHardwareConstraintA__IdAssignment_11_4)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdAssignment_11_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeHardwareConstraintA__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_12__0__Impl
	rule__NodeHardwareConstraintA__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getFlavourAction_12_0()); }
	()
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getFlavourAction_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_12__1__Impl
	rule__NodeHardwareConstraintA__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getFlavourKeyword_12_1()); }
	('flavour')
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getFlavourKeyword_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_12__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeHardwareConstraintA__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__Group_12__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeHardwareConstraintAAccess().getProfileAssignment_12_2()); }
	(rule__NodeHardwareConstraintA__ProfileAssignment_12_2)
	{ after(grammarAccess.getNodeHardwareConstraintAAccess().getProfileAssignment_12_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNetworkConstraintA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_0__0__Impl
	rule__NodeNetworkConstraintA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_0_0()); }
	()
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_0__1__Impl
	rule__NodeNetworkConstraintA__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_0_1()); }
	('ip')
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_0__2__Impl
	rule__NodeNetworkConstraintA__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_0_2()); }
	'address'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_0__3__Impl
	rule__NodeNetworkConstraintA__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpAssignment_0_3()); }
	(rule__NodeNetworkConstraintA__OpAssignment_0_3)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_0__4__Impl
	rule__NodeNetworkConstraintA__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getToKeyword_0_4()); }
	'to'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getToKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIpAddressAssignment_0_5()); }
	(rule__NodeNetworkConstraintA__IpAddressAssignment_0_5)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIpAddressAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNetworkConstraintA__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_1__0__Impl
	rule__NodeNetworkConstraintA__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_1_0()); }
	()
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_1__1__Impl
	rule__NodeNetworkConstraintA__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_1_1()); }
	('ip')
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_1__2__Impl
	rule__NodeNetworkConstraintA__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_1_2()); }
	'address'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_1__3__Impl
	rule__NodeNetworkConstraintA__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpAssignment_1_3()); }
	(rule__NodeNetworkConstraintA__OpAssignment_1_3)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_1__4__Impl
	rule__NodeNetworkConstraintA__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getRangeKeyword_1_4()); }
	'range'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getRangeKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIpRangeAssignment_1_5()); }
	(rule__NodeNetworkConstraintA__IpRangeAssignment_1_5)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIpRangeAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNetworkConstraintA__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_2__0__Impl
	rule__NodeNetworkConstraintA__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_2_0()); }
	()
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_2__1__Impl
	rule__NodeNetworkConstraintA__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_2_1()); }
	('ip')
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_2__2__Impl
	rule__NodeNetworkConstraintA__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_2_2()); }
	'address'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_2__3__Impl
	rule__NodeNetworkConstraintA__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_2_3()); }
	'is'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_2__4__Impl
	rule__NodeNetworkConstraintA__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpAssignment_2_4()); }
	(rule__NodeNetworkConstraintA__OpAssignment_2_4)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_2__5__Impl
	rule__NodeNetworkConstraintA__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getToKeyword_2_5()); }
	'to'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getToKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getNodeAssignment_2_6()); }
	(rule__NodeNetworkConstraintA__NodeAssignment_2_6)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getNodeAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNetworkConstraintA__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_3__0__Impl
	rule__NodeNetworkConstraintA__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayAction_3_0()); }
	()
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_3__1__Impl
	rule__NodeNetworkConstraintA__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayKeyword_3_1()); }
	('gateway')
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_3__2__Impl
	rule__NodeNetworkConstraintA__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_3_2()); }
	'is'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayIPAssignment_3_3()); }
	(rule__NodeNetworkConstraintA__GatewayIPAssignment_3_3)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayIPAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNetworkConstraintA__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_4__0__Impl
	rule__NodeNetworkConstraintA__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getDNSAction_4_0()); }
	()
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getDNSAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_4__1__Impl
	rule__NodeNetworkConstraintA__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getDNSKeyword_4_1()); }
	('DNS')
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getDNSKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_4__2__Impl
	rule__NodeNetworkConstraintA__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_4_2()); }
	'is'
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeNetworkConstraintA__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeNetworkConstraintAAccess().getDNSIPAssignment_4_3()); }
	(rule__NodeNetworkConstraintA__DNSIPAssignment_4_3)
	{ after(grammarAccess.getNodeNetworkConstraintAAccess().getDNSIPAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSoftwareConstraintA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_0__0__Impl
	rule__NodeSoftwareConstraintA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getNodeKeyword_0_0()); }
	'node'
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getNodeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_0__1__Impl
	rule__NodeSoftwareConstraintA__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getOSAction_0_1()); }
	()
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getOSAction_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_0__2__Impl
	rule__NodeSoftwareConstraintA__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getOSKeyword_0_2()); }
	('OS')
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getOSKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_0__3__Impl
	rule__NodeSoftwareConstraintA__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getIsKeyword_0_3()); }
	'is'
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getIsKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getVersionAssignment_0_4()); }
	(rule__NodeSoftwareConstraintA__VersionAssignment_0_4)
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getVersionAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSoftwareConstraintA__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_1__0__Impl
	rule__NodeSoftwareConstraintA__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getNodeKeyword_1_0()); }
	'node'
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getNodeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_1__1__Impl
	rule__NodeSoftwareConstraintA__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getOSKeyword_1_1()); }
	'OS'
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getOSKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_1__2__Impl
	rule__NodeSoftwareConstraintA__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getOSFamilyAction_1_2()); }
	()
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getOSFamilyAction_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_1__3__Impl
	rule__NodeSoftwareConstraintA__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyKeyword_1_3()); }
	('family')
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_1__4__Impl
	rule__NodeSoftwareConstraintA__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getIsKeyword_1_4()); }
	'is'
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getIsKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyAssignment_1_5()); }
	(rule__NodeSoftwareConstraintA__FamilyAssignment_1_5)
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSoftwareConstraintA__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_2__0__Impl
	rule__NodeSoftwareConstraintA__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getMountsKeyword_2_0()); }
	'mounts'
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getMountsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_2__1__Impl
	rule__NodeSoftwareConstraintA__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareKeyword_2_1()); }
	'software'
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeSoftwareConstraintA__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareAssignment_2_2()); }
	(rule__NodeSoftwareConstraintA__SoftwareAssignment_2_2)
	{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoftwareInstallation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group__0__Impl
	rule__SoftwareInstallation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getSoftwareIDAssignment_0()); }
	(rule__SoftwareInstallation__SoftwareIDAssignment_0)
	{ after(grammarAccess.getSoftwareInstallationAccess().getSoftwareIDAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group__1__Impl
	rule__SoftwareInstallation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getGroup_1()); }
	(rule__SoftwareInstallation__Group_1__0)?
	{ after(grammarAccess.getSoftwareInstallationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group__2__Impl
	rule__SoftwareInstallation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getGroup_2()); }
	(rule__SoftwareInstallation__Group_2__0)?
	{ after(grammarAccess.getSoftwareInstallationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getGroup_3()); }
	(rule__SoftwareInstallation__Group_3__0)?
	{ after(grammarAccess.getSoftwareInstallationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoftwareInstallation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_1__0__Impl
	rule__SoftwareInstallation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getVersionKeyword_1_0()); }
	'version'
	{ after(grammarAccess.getSoftwareInstallationAccess().getVersionKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getVersionAssignment_1_1()); }
	(rule__SoftwareInstallation__VersionAssignment_1_1)
	{ after(grammarAccess.getSoftwareInstallationAccess().getVersionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoftwareInstallation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_2__0__Impl
	rule__SoftwareInstallation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getWithKeyword_2_0()); }
	'with'
	{ after(grammarAccess.getSoftwareInstallationAccess().getWithKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_2__1__Impl
	rule__SoftwareInstallation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getDependenciesAssignment_2_1()); }
	(rule__SoftwareInstallation__DependenciesAssignment_2_1)
	{ after(grammarAccess.getSoftwareInstallationAccess().getDependenciesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getGroup_2_2()); }
	(rule__SoftwareInstallation__Group_2_2__0)*
	{ after(grammarAccess.getSoftwareInstallationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoftwareInstallation__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_2_2__0__Impl
	rule__SoftwareInstallation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getSoftwareInstallationAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getDependenciesAssignment_2_2_1()); }
	(rule__SoftwareInstallation__DependenciesAssignment_2_2_1)
	{ after(grammarAccess.getSoftwareInstallationAccess().getDependenciesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoftwareInstallation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_3__0__Impl
	rule__SoftwareInstallation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getConfigKeyword_3_0()); }
	'config'
	{ after(grammarAccess.getSoftwareInstallationAccess().getConfigKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoftwareInstallation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoftwareInstallationAccess().getConfigAssignment_3_1()); }
	(rule__SoftwareInstallation__ConfigAssignment_3_1)
	{ after(grammarAccess.getSoftwareInstallationAccess().getConfigAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionNumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group__0__Impl
	rule__VersionNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getGroup_1()); }
	(rule__VersionNumber__Group_1__0)*
	{ after(grammarAccess.getVersionNumberAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionNumber__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group_1__0__Impl
	rule__VersionNumber__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigOptions__Group__0__Impl
	rule__ConfigOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigOptionsAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getConfigOptionsAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigOptions__Group__1__Impl
	rule__ConfigOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigOptionsAccess().getConfigPairsAssignment_1()); }
	(rule__ConfigOptions__ConfigPairsAssignment_1)
	{ after(grammarAccess.getConfigOptionsAccess().getConfigPairsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigOptions__Group__2__Impl
	rule__ConfigOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigOptionsAccess().getGroup_2()); }
	(rule__ConfigOptions__Group_2__0)*
	{ after(grammarAccess.getConfigOptionsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigOptions__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigOptionsAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getConfigOptionsAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigOptions__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigOptions__Group_2__0__Impl
	rule__ConfigOptions__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigOptionsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getConfigOptionsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigOptions__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigOptionsAccess().getConfigPairsAssignment_2_1()); }
	(rule__ConfigOptions__ConfigPairsAssignment_2_1)
	{ after(grammarAccess.getConfigOptionsAccess().getConfigPairsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigPair__Group__0__Impl
	rule__ConfigPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigPairAccess().getKeyAssignment_0()); }
	(rule__ConfigPair__KeyAssignment_0)
	{ after(grammarAccess.getConfigPairAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigPair__Group__1__Impl
	rule__ConfigPair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigPairAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getConfigPairAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigPair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigPair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigPair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigPairAccess().getValueAssignment_2()); }
	(rule__ConfigPair__ValueAssignment_2)
	{ after(grammarAccess.getConfigPairAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Network__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__0__Impl
	rule__Network__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getNetworkKeyword_0()); }
	'network'
	{ after(grammarAccess.getNetworkAccess().getNetworkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__1__Impl
	rule__Network__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getNameAssignment_1()); }
	(rule__Network__NameAssignment_1)
	{ after(grammarAccess.getNetworkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__2__Impl
	rule__Network__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__3__Impl
	rule__Network__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getConstraintsAssignment_3()); }
	(rule__Network__ConstraintsAssignment_3)*
	{ after(grammarAccess.getNetworkAccess().getConstraintsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Network__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetworkConstraint__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkConstraint__Group_0__0__Impl
	rule__NetworkConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkConstraint__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkConstraintAccess().getGuardedNetworkConstraintParserRuleCall_0_0()); }
	ruleGuardedNetworkConstraint
	{ after(grammarAccess.getNetworkConstraintAccess().getGuardedNetworkConstraintParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkConstraint__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkConstraint__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkConstraint__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkConstraintAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getNetworkConstraintAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetworkConstraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkConstraint__Group_1__0__Impl
	rule__NetworkConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkConstraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkConstraintAccess().getSimpleNetworkConstraintParserRuleCall_1_0()); }
	ruleSimpleNetworkConstraint
	{ after(grammarAccess.getNetworkConstraintAccess().getSimpleNetworkConstraintParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkConstraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkConstraint__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkConstraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkConstraintAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getNetworkConstraintAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GuardedNetworkConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNetworkConstraint__Group__0__Impl
	rule__GuardedNetworkConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNetworkConstraintAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getGuardedNetworkConstraintAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNetworkConstraint__Group__1__Impl
	rule__GuardedNetworkConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNetworkConstraintAccess().getNetworktriggerconstraintAssignment_1()); }
	(rule__GuardedNetworkConstraint__NetworktriggerconstraintAssignment_1)
	{ after(grammarAccess.getGuardedNetworkConstraintAccess().getNetworktriggerconstraintAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNetworkConstraint__Group__2__Impl
	rule__GuardedNetworkConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNetworkConstraintAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getGuardedNetworkConstraintAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNetworkConstraint__Group__3__Impl
	rule__GuardedNetworkConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNetworkConstraintAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getGuardedNetworkConstraintAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedNetworkConstraint__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedNetworkConstraintAccess().getNetworkconstraintAssignment_4()); }
	(rule__GuardedNetworkConstraint__NetworkconstraintAssignment_4)
	{ after(grammarAccess.getGuardedNetworkConstraintAccess().getNetworkconstraintAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNetworkConstraintAndOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintAndOr__Group__0__Impl
	rule__SimpleNetworkConstraintAndOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getSimpleNetworkConstraintNotParserRuleCall_0()); }
	ruleSimpleNetworkConstraintNot
	{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getSimpleNetworkConstraintNotParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintAndOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getGroup_1()); }
	(rule__SimpleNetworkConstraintAndOr__Group_1__0)*
	{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNetworkConstraintAndOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintAndOr__Group_1__0__Impl
	rule__SimpleNetworkConstraintAndOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getGroup_1_0()); }
	(rule__SimpleNetworkConstraintAndOr__Group_1_0__0)
	{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintAndOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getRightAssignment_1_1()); }
	(rule__SimpleNetworkConstraintAndOr__RightAssignment_1_1)
	{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNetworkConstraintAndOr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintAndOr__Group_1_0__0__Impl
	rule__SimpleNetworkConstraintAndOr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getAndOrLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getAndOrLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintAndOr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpAssignment_1_0_1()); }
	(rule__SimpleNetworkConstraintAndOr__OpAssignment_1_0_1)
	{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNetworkConstraintNot__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintNot__Group_0__0__Impl
	rule__SimpleNetworkConstraintNot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintNot__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintNotAccess().getNotAction_0_0()); }
	()
	{ after(grammarAccess.getSimpleNetworkConstraintNotAccess().getNotAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintNot__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintNot__Group_0__1__Impl
	rule__SimpleNetworkConstraintNot__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintNot__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintNotAccess().getNotKeyword_0_1()); }
	('not')
	{ after(grammarAccess.getSimpleNetworkConstraintNotAccess().getNotKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintNot__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintNot__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintNot__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintNotAccess().getConstraintAssignment_0_2()); }
	(rule__SimpleNetworkConstraintNot__ConstraintAssignment_0_2)
	{ after(grammarAccess.getSimpleNetworkConstraintNotAccess().getConstraintAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleNetworkConstraintA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintA__Group_0__0__Impl
	rule__SimpleNetworkConstraintA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getSimpleNetworkConstraintAAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintA__Group_0__1__Impl
	rule__SimpleNetworkConstraintA__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAAccess().getSimpleNetworkConstraintParserRuleCall_0_1()); }
	ruleSimpleNetworkConstraint
	{ after(grammarAccess.getSimpleNetworkConstraintAAccess().getSimpleNetworkConstraintParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintA__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleNetworkConstraintA__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintA__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleNetworkConstraintAAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getSimpleNetworkConstraintAAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetworkGatewayConstraint__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_0__0__Impl
	rule__NetworkGatewayConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getIPRangeAction_0_0()); }
	()
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getIPRangeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_0__1__Impl
	rule__NetworkGatewayConstraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getAddressesKeyword_0_1()); }
	('addresses')
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getAddressesKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_0__2__Impl
	rule__NetworkGatewayConstraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getRangeKeyword_0_2()); }
	'range'
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getRangeKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_0__3__Impl
	rule__NetworkGatewayConstraint__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getIsKeyword_0_3()); }
	'is'
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getIsKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getRangeAssignment_0_4()); }
	(rule__NetworkGatewayConstraint__RangeAssignment_0_4)
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getRangeAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetworkGatewayConstraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__0__Impl
	rule__NetworkGatewayConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getGatewayAction_1_0()); }
	()
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getGatewayAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__1__Impl
	rule__NetworkGatewayConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getGatewayKeyword_1_1()); }
	('gateway')
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getGatewayKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__2__Impl
	rule__NetworkGatewayConstraint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getHasKeyword_1_2()); }
	'has'
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getHasKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__3__Impl
	rule__NetworkGatewayConstraint__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getDirectKeyword_1_3()); }
	'direct'
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getDirectKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__4__Impl
	rule__NetworkGatewayConstraint__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getAccessKeyword_1_4()); }
	'access'
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getAccessKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__5__Impl
	rule__NetworkGatewayConstraint__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getToKeyword_1_5()); }
	'to'
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getToKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__6__Impl
	rule__NetworkGatewayConstraint__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getTheKeyword_1_6()); }
	'the'
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getTheKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkGatewayConstraint__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkGatewayConstraintAccess().getInternetAssignment_1_7()); }
	(rule__NetworkGatewayConstraint__InternetAssignment_1_7)
	{ after(grammarAccess.getNetworkGatewayConstraintAccess().getInternetAssignment_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetworkParticipantsConstraint__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_0__0__Impl
	rule__NetworkParticipantsConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getNodeKeyword_0_0()); }
	'node'
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getNodeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_0__1__Impl
	rule__NetworkParticipantsConstraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIdAssignment_0_1()); }
	(rule__NetworkParticipantsConstraint__IdAssignment_0_1)
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_0__2__Impl
	rule__NetworkParticipantsConstraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIsKeyword_0_2()); }
	'is'
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIsKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getOpAssignment_0_3()); }
	(rule__NetworkParticipantsConstraint__OpAssignment_0_3)
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getOpAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetworkParticipantsConstraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_1__0__Impl
	rule__NetworkParticipantsConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getNodeKeyword_1_0()); }
	'node'
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getNodeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_1__1__Impl
	rule__NetworkParticipantsConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIdAssignment_1_1()); }
	(rule__NetworkParticipantsConstraint__IdAssignment_1_1)
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_1__2__Impl
	rule__NetworkParticipantsConstraint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getHasKeyword_1_2()); }
	'has'
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getHasKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_1__3__Impl
	rule__NetworkParticipantsConstraint__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getOpAssignment_1_3()); }
	(rule__NetworkParticipantsConstraint__OpAssignment_1_3)
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getOpAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetworkParticipantsConstraint__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIpAssignment_1_4()); }
	(rule__NetworkParticipantsConstraint__IpAssignment_1_4)
	{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIpAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintAndOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintAndOr__Group__0__Impl
	rule__UpdateTriggerConstraintAndOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getUpdateTriggerConstraintNotParserRuleCall_0()); }
	ruleUpdateTriggerConstraintNot
	{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getUpdateTriggerConstraintNotParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintAndOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getGroup_1()); }
	(rule__UpdateTriggerConstraintAndOr__Group_1__0)*
	{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintAndOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintAndOr__Group_1__0__Impl
	rule__UpdateTriggerConstraintAndOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getGroup_1_0()); }
	(rule__UpdateTriggerConstraintAndOr__Group_1_0__0)
	{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintAndOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getRightAssignment_1_1()); }
	(rule__UpdateTriggerConstraintAndOr__RightAssignment_1_1)
	{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintAndOr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintAndOr__Group_1_0__0__Impl
	rule__UpdateTriggerConstraintAndOr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getAndOrLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getAndOrLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintAndOr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpAssignment_1_0_1()); }
	(rule__UpdateTriggerConstraintAndOr__OpAssignment_1_0_1)
	{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintNot__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintNot__Group_0__0__Impl
	rule__UpdateTriggerConstraintNot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintNot__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintNotAccess().getNotAction_0_0()); }
	()
	{ after(grammarAccess.getUpdateTriggerConstraintNotAccess().getNotAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintNot__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintNot__Group_0__1__Impl
	rule__UpdateTriggerConstraintNot__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintNot__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintNotAccess().getNotKeyword_0_1()); }
	('not')
	{ after(grammarAccess.getUpdateTriggerConstraintNotAccess().getNotKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintNot__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintNot__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintNot__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintNotAccess().getConstraintAssignment_0_2()); }
	(rule__UpdateTriggerConstraintNot__ConstraintAssignment_0_2)
	{ after(grammarAccess.getUpdateTriggerConstraintNotAccess().getConstraintAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_0__0__Impl
	rule__UpdateTriggerConstraintA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_0__1__Impl
	rule__UpdateTriggerConstraintA__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getUpdateTriggerConstraintParserRuleCall_0_1()); }
	ruleUpdateTriggerConstraint
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getUpdateTriggerConstraintParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintA__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_1__0__Impl
	rule__UpdateTriggerConstraintA__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getAtAction_1_0()); }
	()
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getAtAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_1__1__Impl
	rule__UpdateTriggerConstraintA__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getAtKeyword_1_1()); }
	('at')
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getAtKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_1__2__Impl
	rule__UpdateTriggerConstraintA__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getOpAssignment_1_2()); }
	(rule__UpdateTriggerConstraintA__OpAssignment_1_2)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getOpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_1__3__Impl
	rule__UpdateTriggerConstraintA__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getAfterKeyword_1_3()); }
	'after'
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getAfterKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_1__4__Impl
	rule__UpdateTriggerConstraintA__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableAssignment_1_4()); }
	(rule__UpdateTriggerConstraintA__VariableAssignment_1_4)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_1__5__Impl
	rule__UpdateTriggerConstraintA__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_1_5()); }
	'='
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpAssignment_1_6()); }
	(rule__UpdateTriggerConstraintA__TexpAssignment_1_6)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintA__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_2__0__Impl
	rule__UpdateTriggerConstraintA__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getAtAction_2_0()); }
	()
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getAtAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_2__1__Impl
	rule__UpdateTriggerConstraintA__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getAtKeyword_2_1()); }
	('at')
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getAtKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_2__2__Impl
	rule__UpdateTriggerConstraintA__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getOpAssignment_2_2()); }
	(rule__UpdateTriggerConstraintA__OpAssignment_2_2)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getOpAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_2__3__Impl
	rule__UpdateTriggerConstraintA__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getBeforeKeyword_2_3()); }
	'before'
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getBeforeKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_2__4__Impl
	rule__UpdateTriggerConstraintA__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableAssignment_2_4()); }
	(rule__UpdateTriggerConstraintA__VariableAssignment_2_4)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_2__5__Impl
	rule__UpdateTriggerConstraintA__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_2_5()); }
	'='
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpAssignment_2_6()); }
	(rule__UpdateTriggerConstraintA__TexpAssignment_2_6)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTriggerConstraintA__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_3__0__Impl
	rule__UpdateTriggerConstraintA__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getSwitchAction_3_0()); }
	()
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getSwitchAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_3__1__Impl
	rule__UpdateTriggerConstraintA__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getSwitchKeyword_3_1()); }
	('switch')
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getSwitchKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_3__2__Impl
	rule__UpdateTriggerConstraintA__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getAfterKeyword_3_2()); }
	'after'
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getAfterKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_3__3__Impl
	rule__UpdateTriggerConstraintA__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableAssignment_3_3()); }
	(rule__UpdateTriggerConstraintA__VariableAssignment_3_3)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_3__4__Impl
	rule__UpdateTriggerConstraintA__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_3_4()); }
	'='
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTriggerConstraintA__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpAssignment_3_5()); }
	(rule__UpdateTriggerConstraintA__TexpAssignment_3_5)
	{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpAssignment_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeExprAddition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprAddition__Group__0__Impl
	rule__TimeExprAddition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAdditionAccess().getTimeExprMultiplicationParserRuleCall_0()); }
	ruleTimeExprMultiplication
	{ after(grammarAccess.getTimeExprAdditionAccess().getTimeExprMultiplicationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprAddition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAdditionAccess().getGroup_1()); }
	(rule__TimeExprAddition__Group_1__0)*
	{ after(grammarAccess.getTimeExprAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeExprAddition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprAddition__Group_1__0__Impl
	rule__TimeExprAddition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAdditionAccess().getGroup_1_0()); }
	(rule__TimeExprAddition__Group_1_0__0)
	{ after(grammarAccess.getTimeExprAdditionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprAddition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAdditionAccess().getRightAssignment_1_1()); }
	(rule__TimeExprAddition__RightAssignment_1_1)
	{ after(grammarAccess.getTimeExprAdditionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeExprAddition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprAddition__Group_1_0__0__Impl
	rule__TimeExprAddition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAdditionAccess().getPlusMinusLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getTimeExprAdditionAccess().getPlusMinusLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprAddition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAdditionAccess().getOpAssignment_1_0_1()); }
	(rule__TimeExprAddition__OpAssignment_1_0_1)
	{ after(grammarAccess.getTimeExprAdditionAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeExprMultiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprMultiplication__Group__0__Impl
	rule__TimeExprMultiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprMultiplicationAccess().getTimeExprAParserRuleCall_0()); }
	ruleTimeExprA
	{ after(grammarAccess.getTimeExprMultiplicationAccess().getTimeExprAParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprMultiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprMultiplicationAccess().getGroup_1()); }
	(rule__TimeExprMultiplication__Group_1__0)*
	{ after(grammarAccess.getTimeExprMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeExprMultiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprMultiplication__Group_1__0__Impl
	rule__TimeExprMultiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprMultiplicationAccess().getGroup_1_0()); }
	(rule__TimeExprMultiplication__Group_1_0__0)
	{ after(grammarAccess.getTimeExprMultiplicationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprMultiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprMultiplicationAccess().getRightAssignment_1_1()); }
	(rule__TimeExprMultiplication__RightAssignment_1_1)
	{ after(grammarAccess.getTimeExprMultiplicationAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeExprMultiplication__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprMultiplication__Group_1_0__0__Impl
	rule__TimeExprMultiplication__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprMultiplicationAccess().getMultiplicationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getTimeExprMultiplicationAccess().getMultiplicationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprMultiplication__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprMultiplicationAccess().getOpAssignment_1_0_1()); }
	(rule__TimeExprMultiplication__OpAssignment_1_0_1)
	{ after(grammarAccess.getTimeExprMultiplicationAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeExprA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprA__Group_0__0__Impl
	rule__TimeExprA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getTimeExprAAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprA__Group_0__1__Impl
	rule__TimeExprA__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAAccess().getTimeExprParserRuleCall_0_1()); }
	ruleTimeExpr
	{ after(grammarAccess.getTimeExprAAccess().getTimeExprParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeExprA__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeExprAAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getTimeExprAAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CPUFrequency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CPUFrequency__Group__0__Impl
	rule__CPUFrequency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CPUFrequency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCPUFrequencyAccess().getValueAssignment_0()); }
	(rule__CPUFrequency__ValueAssignment_0)
	{ after(grammarAccess.getCPUFrequencyAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CPUFrequency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CPUFrequency__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CPUFrequency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCPUFrequencyAccess().getUnitAssignment_1()); }
	(rule__CPUFrequency__UnitAssignment_1)
	{ after(grammarAccess.getCPUFrequencyAccess().getUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskSize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskSize__Group__0__Impl
	rule__DiskSize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskSizeAccess().getValueAssignment_0()); }
	(rule__DiskSize__ValueAssignment_0)
	{ after(grammarAccess.getDiskSizeAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskSize__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskSizeAccess().getUnitAssignment_1()); }
	(rule__DiskSize__UnitAssignment_1)
	{ after(grammarAccess.getDiskSizeAccess().getUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RamSize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RamSize__Group__0__Impl
	rule__RamSize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RamSize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRamSizeAccess().getValueAssignment_0()); }
	(rule__RamSize__ValueAssignment_0)
	{ after(grammarAccess.getRamSizeAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RamSize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RamSize__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RamSize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRamSizeAccess().getUnitAssignment_1()); }
	(rule__RamSize__UnitAssignment_1)
	{ after(grammarAccess.getRamSizeAccess().getUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IPAddress__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPAddress__Group__0__Impl
	rule__IPAddress__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAddressAccess().getOctet1Assignment_0()); }
	(rule__IPAddress__Octet1Assignment_0)
	{ after(grammarAccess.getIPAddressAccess().getOctet1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPAddress__Group__1__Impl
	rule__IPAddress__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAddressAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getIPAddressAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPAddress__Group__2__Impl
	rule__IPAddress__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAddressAccess().getOctet2Assignment_2()); }
	(rule__IPAddress__Octet2Assignment_2)
	{ after(grammarAccess.getIPAddressAccess().getOctet2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPAddress__Group__3__Impl
	rule__IPAddress__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAddressAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getIPAddressAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPAddress__Group__4__Impl
	rule__IPAddress__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAddressAccess().getOctet3Assignment_4()); }
	(rule__IPAddress__Octet3Assignment_4)
	{ after(grammarAccess.getIPAddressAccess().getOctet3Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPAddress__Group__5__Impl
	rule__IPAddress__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAddressAccess().getFullStopKeyword_5()); }
	'.'
	{ after(grammarAccess.getIPAddressAccess().getFullStopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPAddress__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAddressAccess().getOctet4Assignment_6()); }
	(rule__IPAddress__Octet4Assignment_6)
	{ after(grammarAccess.getIPAddressAccess().getOctet4Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IPRangeA__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPRangeA__Group__0__Impl
	rule__IPRangeA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IPRangeA__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPRangeAAccess().getAddressAssignment_0()); }
	(rule__IPRangeA__AddressAssignment_0)
	{ after(grammarAccess.getIPRangeAAccess().getAddressAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPRangeA__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPRangeA__Group__1__Impl
	rule__IPRangeA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IPRangeA__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPRangeAAccess().getSolidusKeyword_1()); }
	'/'
	{ after(grammarAccess.getIPRangeAAccess().getSolidusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPRangeA__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPRangeA__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IPRangeA__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPRangeAAccess().getBitmaskAssignment_2()); }
	(rule__IPRangeA__BitmaskAssignment_2)
	{ after(grammarAccess.getIPRangeAAccess().getBitmaskAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TimeToUseAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTimeToUseTimeIntervalParserRuleCall_2_1_0()); }
		ruleTimeInterval
		{ after(grammarAccess.getModelAccess().getTimeToUseTimeIntervalParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsScenElemParserRuleCall_4_0()); }
		ruleScenElem
		{ after(grammarAccess.getModelAccess().getElementsScenElemParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ConstraintsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getConstraintsNodeConstraintParserRuleCall_3_0()); }
		ruleNodeConstraint
		{ after(grammarAccess.getNodeAccess().getConstraintsNodeConstraintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__TriggerconstraintAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardedNodeConstraintAccess().getTriggerconstraintUpdateTriggerConstraintParserRuleCall_1_0()); }
		ruleUpdateTriggerConstraint
		{ after(grammarAccess.getGuardedNodeConstraintAccess().getTriggerconstraintUpdateTriggerConstraintParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNodeConstraint__NodeconstraintAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardedNodeConstraintAccess().getNodeconstraintSimpleNodeConstraintParserRuleCall_4_0()); }
		ruleSimpleNodeConstraint
		{ after(grammarAccess.getGuardedNodeConstraintAccess().getNodeconstraintSimpleNodeConstraintParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpAlternatives_1_0_1_0()); }
		(rule__SimpleNodeConstraintAndOr__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintAndOr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNodeConstraintAndOrAccess().getRightSimpleNodeConstraintNotParserRuleCall_1_1_0()); }
		ruleSimpleNodeConstraintNot
		{ after(grammarAccess.getSimpleNodeConstraintAndOrAccess().getRightSimpleNodeConstraintNotParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNodeConstraintNot__ConstraintAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNodeConstraintNotAccess().getConstraintSimpleNodeConstraintAParserRuleCall_0_2_0()); }
		ruleSimpleNodeConstraintA
		{ after(grammarAccess.getSimpleNodeConstraintNotAccess().getConstraintSimpleNodeConstraintAParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_0_3_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_0_3_0()); }
			'equal'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_0_3_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_0_5_0()); }
		ruleCPUFrequency
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpFasterKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpFasterKeyword_1_2_0()); }
			'faster'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpFasterKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpFasterKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_1_4_0()); }
		ruleCPUFrequency
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpSlowerKeyword_2_2_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpSlowerKeyword_2_2_0()); }
			'slower'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpSlowerKeyword_2_2_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpSlowerKeyword_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_2_4_0()); }
		ruleCPUFrequency
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__SameasAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_3_3_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_3_3_0()); }
			'of'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_3_3_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__IdAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_3_4_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeIDTerminalRuleCall_3_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeIDTerminalRuleCall_3_4_0_1()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_4_3_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_4_3_0()); }
			'equal'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_4_3_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_4_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_4_5_0()); }
		ruleDiskSize
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_4_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_5_2_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_5_2_0()); }
			'larger'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_5_2_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_5_4_0()); }
		ruleDiskSize
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_5_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_6_2_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_6_2_0()); }
			'smaller'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_6_2_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_6_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_6_4_0()); }
		ruleDiskSize
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_6_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__SameasAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_7_3_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_7_3_0()); }
			'of'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_7_3_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__IdAssignment_7_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_7_4_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeIDTerminalRuleCall_7_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeIDTerminalRuleCall_7_4_0_1()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_7_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_8_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_8_3_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_8_3_0()); }
			'equal'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_8_3_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_8_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_8_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_8_5_0()); }
		ruleRamSize
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_8_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_9_2_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_9_2_0()); }
			'larger'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_9_2_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_9_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_9_4_0()); }
		ruleRamSize
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_9_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__OpAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_10_2_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_10_2_0()); }
			'smaller'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_10_2_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ValueAssignment_10_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_10_4_0()); }
		ruleRamSize
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_10_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__SameasAssignment_11_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_11_3_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_11_3_0()); }
			'of'
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_11_3_0()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_11_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__IdAssignment_11_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_11_4_0()); }
		(
			{ before(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeIDTerminalRuleCall_11_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeIDTerminalRuleCall_11_4_0_1()); }
		)
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_11_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeHardwareConstraintA__ProfileAssignment_12_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeHardwareConstraintAAccess().getProfileHardwareProfileEnumRuleCall_12_2_0()); }
		ruleHardwareProfile
		{ after(grammarAccess.getNodeHardwareConstraintAAccess().getProfileHardwareProfileEnumRuleCall_12_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__OpAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpEqualKeyword_0_3_0()); }
		(
			{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpEqualKeyword_0_3_0()); }
			'equal'
			{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpEqualKeyword_0_3_0()); }
		)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpEqualKeyword_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__IpAddressAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIpAddressIPAddressParserRuleCall_0_5_0()); }
		ruleIPAddress
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIpAddressIPAddressParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__OpAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpInKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpInKeyword_1_3_0()); }
			'in'
			{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpInKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpInKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__IpRangeAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getIpRangeIPRangeAParserRuleCall_1_5_0()); }
		ruleIPRangeA
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getIpRangeIPRangeAParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__OpAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpConnectedKeyword_2_4_0()); }
		(
			{ before(grammarAccess.getNodeNetworkConstraintAAccess().getOpConnectedKeyword_2_4_0()); }
			'connected'
			{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpConnectedKeyword_2_4_0()); }
		)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getOpConnectedKeyword_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__NodeAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getNodeNodeCrossReference_2_6_0()); }
		(
			{ before(grammarAccess.getNodeNetworkConstraintAAccess().getNodeNodeIDTerminalRuleCall_2_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeNetworkConstraintAAccess().getNodeNodeIDTerminalRuleCall_2_6_0_1()); }
		)
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getNodeNodeCrossReference_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__GatewayIPAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayIPIPAddressParserRuleCall_3_3_0()); }
		ruleIPAddress
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayIPIPAddressParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNetworkConstraintA__DNSIPAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNetworkConstraintAAccess().getDNSIPIPAddressParserRuleCall_4_3_0()); }
		ruleIPAddress
		{ after(grammarAccess.getNodeNetworkConstraintAAccess().getDNSIPIPAddressParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__VersionAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getVersionOSVersionEParserRuleCall_0_4_0()); }
		ruleOSVersionE
		{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getVersionOSVersionEParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__FamilyAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyOSFamilyEParserRuleCall_1_5_0()); }
		ruleOSFamilyE
		{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyOSFamilyEParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSoftwareConstraintA__SoftwareAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareSoftwareInstallationParserRuleCall_2_2_0()); }
		ruleSoftwareInstallation
		{ after(grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareSoftwareInstallationParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__SoftwareIDAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoftwareInstallationAccess().getSoftwareIDIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSoftwareInstallationAccess().getSoftwareIDIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__VersionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoftwareInstallationAccess().getVersionVersionNumberParserRuleCall_1_1_0()); }
		ruleVersionNumber
		{ after(grammarAccess.getSoftwareInstallationAccess().getVersionVersionNumberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__DependenciesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoftwareInstallationAccess().getDependenciesSoftwareDependencyParserRuleCall_2_1_0()); }
		ruleSoftwareDependency
		{ after(grammarAccess.getSoftwareInstallationAccess().getDependenciesSoftwareDependencyParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__DependenciesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoftwareInstallationAccess().getDependenciesSoftwareDependencyParserRuleCall_2_2_1_0()); }
		ruleSoftwareDependency
		{ after(grammarAccess.getSoftwareInstallationAccess().getDependenciesSoftwareDependencyParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareInstallation__ConfigAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoftwareInstallationAccess().getConfigConfigOptionsParserRuleCall_3_1_0()); }
		ruleConfigOptions
		{ after(grammarAccess.getSoftwareInstallationAccess().getConfigConfigOptionsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwareDependency__DependencyIDAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoftwareDependencyAccess().getDependencyIDIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSoftwareDependencyAccess().getDependencyIDIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__ConfigPairsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigOptionsAccess().getConfigPairsConfigPairParserRuleCall_1_0()); }
		ruleConfigPair
		{ after(grammarAccess.getConfigOptionsAccess().getConfigPairsConfigPairParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigOptions__ConfigPairsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigOptionsAccess().getConfigPairsConfigPairParserRuleCall_2_1_0()); }
		ruleConfigPair
		{ after(grammarAccess.getConfigOptionsAccess().getConfigPairsConfigPairParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigPair__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigPairAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConfigPairAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigPair__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigPairAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConfigPairAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNetworkAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Network__ConstraintsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkAccess().getConstraintsNetworkConstraintParserRuleCall_3_0()); }
		ruleNetworkConstraint
		{ after(grammarAccess.getNetworkAccess().getConstraintsNetworkConstraintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__NetworktriggerconstraintAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardedNetworkConstraintAccess().getNetworktriggerconstraintUpdateTriggerConstraintParserRuleCall_1_0()); }
		ruleUpdateTriggerConstraint
		{ after(grammarAccess.getGuardedNetworkConstraintAccess().getNetworktriggerconstraintUpdateTriggerConstraintParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedNetworkConstraint__NetworkconstraintAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardedNetworkConstraintAccess().getNetworkconstraintSimpleNetworkConstraintParserRuleCall_4_0()); }
		ruleSimpleNetworkConstraint
		{ after(grammarAccess.getGuardedNetworkConstraintAccess().getNetworkconstraintSimpleNetworkConstraintParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpAlternatives_1_0_1_0()); }
		(rule__SimpleNetworkConstraintAndOr__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintAndOr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getRightSimpleNetworkConstraintNotParserRuleCall_1_1_0()); }
		ruleSimpleNetworkConstraintNot
		{ after(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getRightSimpleNetworkConstraintNotParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleNetworkConstraintNot__ConstraintAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleNetworkConstraintNotAccess().getConstraintSimpleNetworkConstraintAParserRuleCall_0_2_0()); }
		ruleSimpleNetworkConstraintA
		{ after(grammarAccess.getSimpleNetworkConstraintNotAccess().getConstraintSimpleNetworkConstraintAParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__RangeAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkGatewayConstraintAccess().getRangeIPRangeAParserRuleCall_0_4_0()); }
		ruleIPRangeA
		{ after(grammarAccess.getNetworkGatewayConstraintAccess().getRangeIPRangeAParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkGatewayConstraint__InternetAssignment_1_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkGatewayConstraintAccess().getInternetInternetKeyword_1_7_0()); }
		(
			{ before(grammarAccess.getNetworkGatewayConstraintAccess().getInternetInternetKeyword_1_7_0()); }
			'Internet'
			{ after(grammarAccess.getNetworkGatewayConstraintAccess().getInternetInternetKeyword_1_7_0()); }
		)
		{ after(grammarAccess.getNetworkGatewayConstraintAccess().getInternetInternetKeyword_1_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__IdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__OpAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getOpConnectedKeyword_0_3_0()); }
		(
			{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getOpConnectedKeyword_0_3_0()); }
			'connected'
			{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getOpConnectedKeyword_0_3_0()); }
		)
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getOpConnectedKeyword_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__OpAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getOpIPKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getOpIPKeyword_1_3_0()); }
			'IP'
			{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getOpIPKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getOpIPKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetworkParticipantsConstraint__IpAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetworkParticipantsConstraintAccess().getIpIPAddressParserRuleCall_1_4_0()); }
		ruleIPAddress
		{ after(grammarAccess.getNetworkParticipantsConstraintAccess().getIpIPAddressParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpAlternatives_1_0_1_0()); }
		(rule__UpdateTriggerConstraintAndOr__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintAndOr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getRightUpdateTriggerConstraintNotParserRuleCall_1_1_0()); }
		ruleUpdateTriggerConstraintNot
		{ after(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getRightUpdateTriggerConstraintNotParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintNot__ConstraintAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintNotAccess().getConstraintUpdateTriggerConstraintAParserRuleCall_0_2_0()); }
		ruleUpdateTriggerConstraintA
		{ after(grammarAccess.getUpdateTriggerConstraintNotAccess().getConstraintUpdateTriggerConstraintAParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__OpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getOpLeastKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getOpLeastKeyword_1_2_0()); }
			'least'
			{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getOpLeastKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getOpLeastKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__VariableAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_1_4_0()); }
		RULE_ID
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__TexpAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_1_6_0()); }
		ruleTimeExpr
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__OpAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getOpMostKeyword_2_2_0()); }
		(
			{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getOpMostKeyword_2_2_0()); }
			'most'
			{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getOpMostKeyword_2_2_0()); }
		)
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getOpMostKeyword_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__VariableAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_2_4_0()); }
		RULE_ID
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__TexpAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_2_6_0()); }
		ruleTimeExpr
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__VariableAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_3_3_0()); }
		RULE_ID
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTriggerConstraintA__TexpAssignment_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_3_5_0()); }
		ruleTimeExpr
		{ after(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprAdditionAccess().getOpAlternatives_1_0_1_0()); }
		(rule__TimeExprAddition__OpAlternatives_1_0_1_0)
		{ after(grammarAccess.getTimeExprAdditionAccess().getOpAlternatives_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprAddition__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprAdditionAccess().getRightTimeExprMultiplicationParserRuleCall_1_1_0()); }
		ruleTimeExprMultiplication
		{ after(grammarAccess.getTimeExprAdditionAccess().getRightTimeExprMultiplicationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getTimeExprMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0()); }
			'*'
			{ after(grammarAccess.getTimeExprMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getTimeExprMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprMultiplication__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprMultiplicationAccess().getRightTimeExprAParserRuleCall_1_1_0()); }
		ruleTimeExprA
		{ after(grammarAccess.getTimeExprMultiplicationAccess().getRightTimeExprAParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprAAccess().getVariableIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTimeExprAAccess().getVariableIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExprA__IntervalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExprAAccess().getIntervalTimeIntervalParserRuleCall_2_0()); }
		ruleTimeInterval
		{ after(grammarAccess.getTimeExprAAccess().getIntervalTimeIntervalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeIntervalAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeIntervalAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CPUFrequency__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCPUFrequencyAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getCPUFrequencyAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CPUFrequency__UnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCPUFrequencyAccess().getUnitAlternatives_1_0()); }
		(rule__CPUFrequency__UnitAlternatives_1_0)
		{ after(grammarAccess.getCPUFrequencyAccess().getUnitAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSize__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSizeAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDiskSizeAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSize__UnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSizeAccess().getUnitAlternatives_1_0()); }
		(rule__DiskSize__UnitAlternatives_1_0)
		{ after(grammarAccess.getDiskSizeAccess().getUnitAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RamSize__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRamSizeAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getRamSizeAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RamSize__UnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRamSizeAccess().getUnitAlternatives_1_0()); }
		(rule__RamSize__UnitAlternatives_1_0)
		{ after(grammarAccess.getRamSizeAccess().getUnitAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Octet1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPAddressAccess().getOctet1INTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getIPAddressAccess().getOctet1INTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Octet2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPAddressAccess().getOctet2INTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getIPAddressAccess().getOctet2INTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Octet3Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPAddressAccess().getOctet3INTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getIPAddressAccess().getOctet3INTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPAddress__Octet4Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPAddressAccess().getOctet4INTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getIPAddressAccess().getOctet4INTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPRangeA__AddressAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPRangeAAccess().getAddressIPAddressParserRuleCall_0_0()); }
		ruleIPAddress
		{ after(grammarAccess.getIPRangeAAccess().getAddressIPAddressParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPRangeA__BitmaskAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPRangeAAccess().getBitmaskINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getIPRangeAAccess().getBitmaskINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
