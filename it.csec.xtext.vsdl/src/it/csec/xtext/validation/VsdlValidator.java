/*
 * generated by Xtext 2.35.0
 */
package it.csec.xtext.validation;


import it.csec.xtext.vsdl.IPAddress;
import it.csec.xtext.vsdl.IPRangeA;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.validation.ValidationMessageAcceptor;
import org.eclipse.xtext.validation.AbstractDeclarativeValidator;

/**
 * This class contains custom validation rules.
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class VsdlValidator extends AbstractVsdlValidator {

    /**
     * Validate an IP address.
     *
     * @param ip the IP address object
     */
    @Check
    public void checkIPAddress(IPAddress ip) {
        if ((ip.getOctet1() > 255) || (ip.getOctet2() > 255) || (ip.getOctet3() > 255) || (ip.getOctet4() > 255)) {
            error("Invalid IP Address", null, ValidationMessageAcceptor.INSIGNIFICANT_INDEX);
        }
    }

    /**
     * Validate an IP range with bitmask.
     *
     * @param ipr the IP range object
     */
    @Check
    public void checkIPRangeA(IPRangeA ipr) {
        if ((ipr.getAddress().getOctet1() > 255) || (ipr.getAddress().getOctet2() > 255) || (ipr.getAddress().getOctet3() > 255) || (ipr.getAddress().getOctet4() > 255)) {
            error("Invalid IP address", null, ValidationMessageAcceptor.INSIGNIFICANT_INDEX);
        }

        if (ipr.getBitmask() < 0 || ipr.getBitmask() > 32) {
            error("Invalid netmask", null, ValidationMessageAcceptor.INSIGNIFICANT_INDEX);
        }
    }
}