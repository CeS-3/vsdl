/*
 * generated by Xtext 2.35.0
 */
grammar InternalVsdl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package it.csec.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package it.csec.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import it.csec.xtext.services.VsdlGrammarAccess;

}

@parser::members {

 	private VsdlGrammarAccess grammarAccess;

    public InternalVsdlParser(TokenStream input, VsdlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected VsdlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='scenario'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getScenarioKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='duration'
			{
				newLeafNode(otherlv_2, grammarAccess.getModelAccess().getDurationKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getTimeToUseTimeIntervalParserRuleCall_2_1_0());
					}
					lv_TimeToUse_3_0=ruleTimeInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"TimeToUse",
							lv_TimeToUse_3_0,
							"it.csec.xtext.Vsdl.TimeInterval");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsScenElemParserRuleCall_4_0());
				}
				lv_Elements_5_0=ruleScenElem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"Elements",
						lv_Elements_5_0,
						"it.csec.xtext.Vsdl.ScenElem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleScenElem
entryRuleScenElem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenElemRule()); }
	iv_ruleScenElem=ruleScenElem
	{ $current=$iv_ruleScenElem.current; }
	EOF;

// Rule ScenElem
ruleScenElem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getScenElemAccess().getNodeParserRuleCall_0());
		}
		this_Node_0=ruleNode
		{
			$current = $this_Node_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getScenElemAccess().getNetworkParserRuleCall_1());
		}
		this_Network_1=ruleNetwork
		{
			$current = $this_Network_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getConstraintsNodeConstraintParserRuleCall_3_0());
				}
				lv_constraints_3_0=ruleNodeConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_3_0,
						"it.csec.xtext.Vsdl.NodeConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNodeConstraint
entryRuleNodeConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeConstraintRule()); }
	iv_ruleNodeConstraint=ruleNodeConstraint
	{ $current=$iv_ruleNodeConstraint.current; }
	EOF;

// Rule NodeConstraint
ruleNodeConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNodeConstraintAccess().getGuardedNodeConstraintParserRuleCall_0_0());
			}
			this_GuardedNodeConstraint_0=ruleGuardedNodeConstraint
			{
				$current = $this_GuardedNodeConstraint_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getNodeConstraintAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getNodeConstraintAccess().getSimpleNodeConstraintParserRuleCall_1_0());
			}
			this_SimpleNodeConstraint_2=ruleSimpleNodeConstraint
			{
				$current = $this_SimpleNodeConstraint_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getNodeConstraintAccess().getSemicolonKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleGuardedNodeConstraint
entryRuleGuardedNodeConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuardedNodeConstraintRule()); }
	iv_ruleGuardedNodeConstraint=ruleGuardedNodeConstraint
	{ $current=$iv_ruleGuardedNodeConstraint.current; }
	EOF;

// Rule GuardedNodeConstraint
ruleGuardedNodeConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getGuardedNodeConstraintAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGuardedNodeConstraintAccess().getTriggerconstraintUpdateTriggerConstraintParserRuleCall_1_0());
				}
				lv_triggerconstraint_1_0=ruleUpdateTriggerConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGuardedNodeConstraintRule());
					}
					set(
						$current,
						"triggerconstraint",
						lv_triggerconstraint_1_0,
						"it.csec.xtext.Vsdl.UpdateTriggerConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getGuardedNodeConstraintAccess().getRightSquareBracketKeyword_2());
		}
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getGuardedNodeConstraintAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGuardedNodeConstraintAccess().getNodeconstraintSimpleNodeConstraintParserRuleCall_4_0());
				}
				lv_nodeconstraint_4_0=ruleSimpleNodeConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGuardedNodeConstraintRule());
					}
					set(
						$current,
						"nodeconstraint",
						lv_nodeconstraint_4_0,
						"it.csec.xtext.Vsdl.SimpleNodeConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleNodeConstraint
entryRuleSimpleNodeConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNodeConstraintRule()); }
	iv_ruleSimpleNodeConstraint=ruleSimpleNodeConstraint
	{ $current=$iv_ruleSimpleNodeConstraint.current; }
	EOF;

// Rule SimpleNodeConstraint
ruleSimpleNodeConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSimpleNodeConstraintAccess().getSimpleNodeConstraintAndOrParserRuleCall());
	}
	this_SimpleNodeConstraintAndOr_0=ruleSimpleNodeConstraintAndOr
	{
		$current = $this_SimpleNodeConstraintAndOr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSimpleNodeConstraintAndOr
entryRuleSimpleNodeConstraintAndOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNodeConstraintAndOrRule()); }
	iv_ruleSimpleNodeConstraintAndOr=ruleSimpleNodeConstraintAndOr
	{ $current=$iv_ruleSimpleNodeConstraintAndOr.current; }
	EOF;

// Rule SimpleNodeConstraintAndOr
ruleSimpleNodeConstraintAndOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleNodeConstraintAndOrAccess().getSimpleNodeConstraintNotParserRuleCall_0());
		}
		this_SimpleNodeConstraintNot_0=ruleSimpleNodeConstraintNot
		{
			$current = $this_SimpleNodeConstraintNot_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getSimpleNodeConstraintAndOrAccess().getAndOrLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='and'
							{
								newLeafNode(lv_op_2_1, grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSimpleNodeConstraintAndOrRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='or'
							{
								newLeafNode(lv_op_2_2, grammarAccess.getSimpleNodeConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSimpleNodeConstraintAndOrRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleNodeConstraintAndOrAccess().getRightSimpleNodeConstraintNotParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleSimpleNodeConstraintNot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleNodeConstraintAndOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"it.csec.xtext.Vsdl.SimpleNodeConstraintNot");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSimpleNodeConstraintNot
entryRuleSimpleNodeConstraintNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNodeConstraintNotRule()); }
	iv_ruleSimpleNodeConstraintNot=ruleSimpleNodeConstraintNot
	{ $current=$iv_ruleSimpleNodeConstraintNot.current; }
	EOF;

// Rule SimpleNodeConstraintNot
ruleSimpleNodeConstraintNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSimpleNodeConstraintNotAccess().getNotAction_0_0(),
						$current);
				}
			)
			(
				('not')=>
				otherlv_1='not'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimpleNodeConstraintNotAccess().getNotKeyword_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleNodeConstraintNotAccess().getConstraintSimpleNodeConstraintAParserRuleCall_0_2_0());
					}
					lv_constraint_2_0=ruleSimpleNodeConstraintA
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleNodeConstraintNotRule());
						}
						set(
							$current,
							"constraint",
							lv_constraint_2_0,
							"it.csec.xtext.Vsdl.SimpleNodeConstraintA");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimpleNodeConstraintNotAccess().getSimpleNodeConstraintAParserRuleCall_1());
		}
		this_SimpleNodeConstraintA_3=ruleSimpleNodeConstraintA
		{
			$current = $this_SimpleNodeConstraintA_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleNodeConstraintA
entryRuleSimpleNodeConstraintA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNodeConstraintARule()); }
	iv_ruleSimpleNodeConstraintA=ruleSimpleNodeConstraintA
	{ $current=$iv_ruleSimpleNodeConstraintA.current; }
	EOF;

// Rule SimpleNodeConstraintA
ruleSimpleNodeConstraintA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getSimpleNodeConstraintAAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getSimpleNodeConstraintAAccess().getSimpleNodeConstraintParserRuleCall_0_1());
			}
			this_SimpleNodeConstraint_1=ruleSimpleNodeConstraint
			{
				$current = $this_SimpleNodeConstraint_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getSimpleNodeConstraintAAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimpleNodeConstraintAAccess().getNodeHardwareConstraintAParserRuleCall_1());
		}
		this_NodeHardwareConstraintA_3=ruleNodeHardwareConstraintA
		{
			$current = $this_NodeHardwareConstraintA_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleNodeConstraintAAccess().getNodeSoftwareConstraintAParserRuleCall_2());
		}
		this_NodeSoftwareConstraintA_4=ruleNodeSoftwareConstraintA
		{
			$current = $this_NodeSoftwareConstraintA_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleNodeConstraintAAccess().getNodeNetworkConstraintAParserRuleCall_3());
		}
		this_NodeNetworkConstraintA_5=ruleNodeNetworkConstraintA
		{
			$current = $this_NodeNetworkConstraintA_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNodeHardwareConstraintA
entryRuleNodeHardwareConstraintA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeHardwareConstraintARule()); }
	iv_ruleNodeHardwareConstraintA=ruleNodeHardwareConstraintA
	{ $current=$iv_ruleNodeHardwareConstraintA.current; }
	EOF;

// Rule NodeHardwareConstraintA
ruleNodeHardwareConstraintA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_0_0(),
						$current);
				}
			)
			(
				('cpu')=>
				otherlv_1='cpu'
				{
					newLeafNode(otherlv_1, grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_0_1());
				}
			)
			otherlv_2='speed'
			{
				newLeafNode(otherlv_2, grammarAccess.getNodeHardwareConstraintAAccess().getSpeedKeyword_0_2());
			}
			(
				(
					lv_op_3_0='equal'
					{
						newLeafNode(lv_op_3_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_3_0, "equal");
					}
				)
			)
			otherlv_4='to'
			{
				newLeafNode(otherlv_4, grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_0_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_0_5_0());
					}
					lv_value_5_0=ruleCPUFrequency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"it.csec.xtext.Vsdl.CPUFrequency");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_1_0(),
						$current);
				}
			)
			(
				('cpu')=>
				otherlv_7='cpu'
				{
					newLeafNode(otherlv_7, grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_1_1());
				}
			)
			(
				(
					lv_op_8_0='faster'
					{
						newLeafNode(lv_op_8_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpFasterKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_8_0, "faster");
					}
				)
			)
			otherlv_9='than'
			{
				newLeafNode(otherlv_9, grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_1_4_0());
					}
					lv_value_10_0=ruleCPUFrequency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_10_0,
							"it.csec.xtext.Vsdl.CPUFrequency");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_2_0(),
						$current);
				}
			)
			(
				('cpu')=>
				otherlv_12='cpu'
				{
					newLeafNode(otherlv_12, grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_2_1());
				}
			)
			(
				(
					lv_op_13_0='slower'
					{
						newLeafNode(lv_op_13_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpSlowerKeyword_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_13_0, "slower");
					}
				)
			)
			otherlv_14='than'
			{
				newLeafNode(otherlv_14, grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueCPUFrequencyParserRuleCall_2_4_0());
					}
					lv_value_15_0=ruleCPUFrequency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_15_0,
							"it.csec.xtext.Vsdl.CPUFrequency");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getCPUAction_3_0(),
						$current);
				}
			)
			(
				('cpu')=>
				otherlv_17='cpu'
				{
					newLeafNode(otherlv_17, grammarAccess.getNodeHardwareConstraintAAccess().getCpuKeyword_3_1());
				}
			)
			otherlv_18='speed'
			{
				newLeafNode(otherlv_18, grammarAccess.getNodeHardwareConstraintAAccess().getSpeedKeyword_3_2());
			}
			(
				(
					lv_sameas_19_0='of'
					{
						newLeafNode(lv_sameas_19_0, grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_3_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "sameas", lv_sameas_19_0 != null, "of");
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
					}
					otherlv_20=RULE_ID
					{
						newLeafNode(otherlv_20, grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_3_4_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_4_0(),
						$current);
				}
			)
			(
				('disk')=>
				otherlv_22='disk'
				{
					newLeafNode(otherlv_22, grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_4_1());
				}
			)
			otherlv_23='size'
			{
				newLeafNode(otherlv_23, grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_4_2());
			}
			(
				(
					lv_op_24_0='equal'
					{
						newLeafNode(lv_op_24_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_4_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_24_0, "equal");
					}
				)
			)
			otherlv_25='to'
			{
				newLeafNode(otherlv_25, grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_4_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_4_5_0());
					}
					lv_value_26_0=ruleDiskSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_26_0,
							"it.csec.xtext.Vsdl.DiskSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_5_0(),
						$current);
				}
			)
			(
				('disk')=>
				otherlv_28='disk'
				{
					newLeafNode(otherlv_28, grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_5_1());
				}
			)
			(
				(
					lv_op_29_0='larger'
					{
						newLeafNode(lv_op_29_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_29_0, "larger");
					}
				)
			)
			otherlv_30='than'
			{
				newLeafNode(otherlv_30, grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_5_4_0());
					}
					lv_value_31_0=ruleDiskSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_31_0,
							"it.csec.xtext.Vsdl.DiskSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_6_0(),
						$current);
				}
			)
			(
				('disk')=>
				otherlv_33='disk'
				{
					newLeafNode(otherlv_33, grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_6_1());
				}
			)
			(
				(
					lv_op_34_0='smaller'
					{
						newLeafNode(lv_op_34_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_34_0, "smaller");
					}
				)
			)
			otherlv_35='than'
			{
				newLeafNode(otherlv_35, grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_6_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueDiskSizeParserRuleCall_6_4_0());
					}
					lv_value_36_0=ruleDiskSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_36_0,
							"it.csec.xtext.Vsdl.DiskSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getDiskAction_7_0(),
						$current);
				}
			)
			(
				('disk')=>
				otherlv_38='disk'
				{
					newLeafNode(otherlv_38, grammarAccess.getNodeHardwareConstraintAAccess().getDiskKeyword_7_1());
				}
			)
			otherlv_39='size'
			{
				newLeafNode(otherlv_39, grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_7_2());
			}
			(
				(
					lv_sameas_40_0='of'
					{
						newLeafNode(lv_sameas_40_0, grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_7_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "sameas", lv_sameas_40_0 != null, "of");
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
					}
					otherlv_41=RULE_ID
					{
						newLeafNode(otherlv_41, grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_7_4_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_8_0(),
						$current);
				}
			)
			(
				('ram')=>
				otherlv_43='ram'
				{
					newLeafNode(otherlv_43, grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_8_1());
				}
			)
			otherlv_44='size'
			{
				newLeafNode(otherlv_44, grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_8_2());
			}
			(
				(
					lv_op_45_0='equal'
					{
						newLeafNode(lv_op_45_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpEqualKeyword_8_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_45_0, "equal");
					}
				)
			)
			otherlv_46='to'
			{
				newLeafNode(otherlv_46, grammarAccess.getNodeHardwareConstraintAAccess().getToKeyword_8_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_8_5_0());
					}
					lv_value_47_0=ruleRamSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_47_0,
							"it.csec.xtext.Vsdl.RamSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_9_0(),
						$current);
				}
			)
			(
				('ram')=>
				otherlv_49='ram'
				{
					newLeafNode(otherlv_49, grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_9_1());
				}
			)
			(
				(
					lv_op_50_0='larger'
					{
						newLeafNode(lv_op_50_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpLargerKeyword_9_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_50_0, "larger");
					}
				)
			)
			otherlv_51='than'
			{
				newLeafNode(otherlv_51, grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_9_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_9_4_0());
					}
					lv_value_52_0=ruleRamSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_52_0,
							"it.csec.xtext.Vsdl.RamSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_10_0(),
						$current);
				}
			)
			(
				('ram')=>
				otherlv_54='ram'
				{
					newLeafNode(otherlv_54, grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_10_1());
				}
			)
			(
				(
					lv_op_55_0='smaller'
					{
						newLeafNode(lv_op_55_0, grammarAccess.getNodeHardwareConstraintAAccess().getOpSmallerKeyword_10_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_55_0, "smaller");
					}
				)
			)
			otherlv_56='than'
			{
				newLeafNode(otherlv_56, grammarAccess.getNodeHardwareConstraintAAccess().getThanKeyword_10_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getValueRamSizeParserRuleCall_10_4_0());
					}
					lv_value_57_0=ruleRamSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"value",
							lv_value_57_0,
							"it.csec.xtext.Vsdl.RamSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getRamAction_11_0(),
						$current);
				}
			)
			(
				('ram')=>
				otherlv_59='ram'
				{
					newLeafNode(otherlv_59, grammarAccess.getNodeHardwareConstraintAAccess().getRamKeyword_11_1());
				}
			)
			otherlv_60='size'
			{
				newLeafNode(otherlv_60, grammarAccess.getNodeHardwareConstraintAAccess().getSizeKeyword_11_2());
			}
			(
				(
					lv_sameas_61_0='of'
					{
						newLeafNode(lv_sameas_61_0, grammarAccess.getNodeHardwareConstraintAAccess().getSameasOfKeyword_11_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
						setWithLastConsumed($current, "sameas", lv_sameas_61_0 != null, "of");
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeHardwareConstraintARule());
						}
					}
					otherlv_62=RULE_ID
					{
						newLeafNode(otherlv_62, grammarAccess.getNodeHardwareConstraintAAccess().getIdNodeCrossReference_11_4_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeHardwareConstraintAAccess().getFlavourAction_12_0(),
						$current);
				}
			)
			(
				('flavour')=>
				otherlv_64='flavour'
				{
					newLeafNode(otherlv_64, grammarAccess.getNodeHardwareConstraintAAccess().getFlavourKeyword_12_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeHardwareConstraintAAccess().getProfileHardwareProfileEnumRuleCall_12_2_0());
					}
					lv_profile_65_0=ruleHardwareProfile
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeHardwareConstraintARule());
						}
						set(
							$current,
							"profile",
							lv_profile_65_0,
							"it.csec.xtext.Vsdl.HardwareProfile");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNodeNetworkConstraintA
entryRuleNodeNetworkConstraintA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeNetworkConstraintARule()); }
	iv_ruleNodeNetworkConstraintA=ruleNodeNetworkConstraintA
	{ $current=$iv_ruleNodeNetworkConstraintA.current; }
	EOF;

// Rule NodeNetworkConstraintA
ruleNodeNetworkConstraintA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_id_1_0=RULE_ID
					{
						newLeafNode(lv_id_1_0, grammarAccess.getNodeNetworkConstraintAAccess().getIdIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2='ip'
			{
				newLeafNode(otherlv_2, grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_0_2());
			}
			otherlv_3='address'
			{
				newLeafNode(otherlv_3, grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_0_3());
			}
			(
				(
					lv_op_4_0='equal'
					{
						newLeafNode(lv_op_4_0, grammarAccess.getNodeNetworkConstraintAAccess().getOpEqualKeyword_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_4_0, "equal");
					}
				)
			)
			otherlv_5='to'
			{
				newLeafNode(otherlv_5, grammarAccess.getNodeNetworkConstraintAAccess().getToKeyword_0_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeNetworkConstraintAAccess().getIpAddressIPAddressParserRuleCall_0_6_0());
					}
					lv_ipAddress_6_0=ruleIPAddress
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeNetworkConstraintARule());
						}
						set(
							$current,
							"ipAddress",
							lv_ipAddress_6_0,
							"it.csec.xtext.Vsdl.IPAddress");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_id_8_0=RULE_ID
					{
						newLeafNode(lv_id_8_0, grammarAccess.getNodeNetworkConstraintAAccess().getIdIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_9='ip'
			{
				newLeafNode(otherlv_9, grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_1_2());
			}
			otherlv_10='address'
			{
				newLeafNode(otherlv_10, grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_1_3());
			}
			(
				(
					lv_op_11_0='in'
					{
						newLeafNode(lv_op_11_0, grammarAccess.getNodeNetworkConstraintAAccess().getOpInKeyword_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_11_0, "in");
					}
				)
			)
			otherlv_12='range'
			{
				newLeafNode(otherlv_12, grammarAccess.getNodeNetworkConstraintAAccess().getRangeKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeNetworkConstraintAAccess().getIpRangeIPRangeAParserRuleCall_1_6_0());
					}
					lv_ipRange_13_0=ruleIPRangeA
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeNetworkConstraintARule());
						}
						set(
							$current,
							"ipRange",
							lv_ipRange_13_0,
							"it.csec.xtext.Vsdl.IPRangeA");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeNetworkConstraintAAccess().getIPAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_id_15_0=RULE_ID
					{
						newLeafNode(lv_id_15_0, grammarAccess.getNodeNetworkConstraintAAccess().getIdIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_15_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_16='ip'
			{
				newLeafNode(otherlv_16, grammarAccess.getNodeNetworkConstraintAAccess().getIpKeyword_2_2());
			}
			otherlv_17='address'
			{
				newLeafNode(otherlv_17, grammarAccess.getNodeNetworkConstraintAAccess().getAddressKeyword_2_3());
			}
			otherlv_18='is'
			{
				newLeafNode(otherlv_18, grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_2_4());
			}
			(
				(
					lv_op_19_0='connected'
					{
						newLeafNode(lv_op_19_0, grammarAccess.getNodeNetworkConstraintAAccess().getOpConnectedKeyword_2_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_19_0, "connected");
					}
				)
			)
			otherlv_20='to'
			{
				newLeafNode(otherlv_20, grammarAccess.getNodeNetworkConstraintAAccess().getToKeyword_2_6());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
					}
					otherlv_21=RULE_ID
					{
						newLeafNode(otherlv_21, grammarAccess.getNodeNetworkConstraintAAccess().getNodeNodeCrossReference_2_7_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeNetworkConstraintAAccess().getGatewayAction_3_0(),
						$current);
				}
			)
			(
				('gateway')=>
				otherlv_23='gateway'
				{
					newLeafNode(otherlv_23, grammarAccess.getNodeNetworkConstraintAAccess().getGatewayKeyword_3_1());
				}
			)
			otherlv_24='is'
			{
				newLeafNode(otherlv_24, grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeNetworkConstraintAAccess().getGatewayIPIPAddressParserRuleCall_3_3_0());
					}
					lv_gatewayIP_25_0=ruleIPAddress
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeNetworkConstraintARule());
						}
						set(
							$current,
							"gatewayIP",
							lv_gatewayIP_25_0,
							"it.csec.xtext.Vsdl.IPAddress");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeNetworkConstraintAAccess().getDNSAction_4_0(),
						$current);
				}
			)
			(
				(
					lv_id_27_0=RULE_ID
					{
						newLeafNode(lv_id_27_0, grammarAccess.getNodeNetworkConstraintAAccess().getIdIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeNetworkConstraintARule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_27_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				('DNS')=>
				otherlv_28='DNS'
				{
					newLeafNode(otherlv_28, grammarAccess.getNodeNetworkConstraintAAccess().getDNSKeyword_4_2());
				}
			)
			otherlv_29='is'
			{
				newLeafNode(otherlv_29, grammarAccess.getNodeNetworkConstraintAAccess().getIsKeyword_4_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeNetworkConstraintAAccess().getDNSIPIPAddressParserRuleCall_4_4_0());
					}
					lv_DNSIP_30_0=ruleIPAddress
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeNetworkConstraintARule());
						}
						set(
							$current,
							"DNSIP",
							lv_DNSIP_30_0,
							"it.csec.xtext.Vsdl.IPAddress");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNodeSoftwareConstraintA
entryRuleNodeSoftwareConstraintA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeSoftwareConstraintARule()); }
	iv_ruleNodeSoftwareConstraintA=ruleNodeSoftwareConstraintA
	{ $current=$iv_ruleNodeSoftwareConstraintA.current; }
	EOF;

// Rule NodeSoftwareConstraintA
ruleNodeSoftwareConstraintA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='node'
			{
				newLeafNode(otherlv_0, grammarAccess.getNodeSoftwareConstraintAAccess().getNodeKeyword_0_0());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeSoftwareConstraintAAccess().getOSAction_0_1(),
						$current);
				}
			)
			(
				('OS')=>
				otherlv_2='OS'
				{
					newLeafNode(otherlv_2, grammarAccess.getNodeSoftwareConstraintAAccess().getOSKeyword_0_2());
				}
			)
			otherlv_3='is'
			{
				newLeafNode(otherlv_3, grammarAccess.getNodeSoftwareConstraintAAccess().getIsKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeSoftwareConstraintAAccess().getVersionOSVersionEParserRuleCall_0_4_0());
					}
					lv_version_4_0=ruleOSVersionE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeSoftwareConstraintARule());
						}
						set(
							$current,
							"version",
							lv_version_4_0,
							"it.csec.xtext.Vsdl.OSVersionE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_5='node'
			{
				newLeafNode(otherlv_5, grammarAccess.getNodeSoftwareConstraintAAccess().getNodeKeyword_1_0());
			}
			otherlv_6='OS'
			{
				newLeafNode(otherlv_6, grammarAccess.getNodeSoftwareConstraintAAccess().getOSKeyword_1_1());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNodeSoftwareConstraintAAccess().getOSFamilyAction_1_2(),
						$current);
				}
			)
			(
				('family')=>
				otherlv_8='family'
				{
					newLeafNode(otherlv_8, grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyKeyword_1_3());
				}
			)
			otherlv_9='is'
			{
				newLeafNode(otherlv_9, grammarAccess.getNodeSoftwareConstraintAAccess().getIsKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeSoftwareConstraintAAccess().getFamilyOSFamilyEParserRuleCall_1_5_0());
					}
					lv_family_10_0=ruleOSFamilyE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeSoftwareConstraintARule());
						}
						set(
							$current,
							"family",
							lv_family_10_0,
							"it.csec.xtext.Vsdl.OSFamilyE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_11='mounts'
			{
				newLeafNode(otherlv_11, grammarAccess.getNodeSoftwareConstraintAAccess().getMountsKeyword_2_0());
			}
			otherlv_12='software'
			{
				newLeafNode(otherlv_12, grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeSoftwareConstraintAAccess().getSoftwareSoftwareInstallationParserRuleCall_2_2_0());
					}
					lv_software_13_0=ruleSoftwareInstallation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeSoftwareConstraintARule());
						}
						set(
							$current,
							"software",
							lv_software_13_0,
							"it.csec.xtext.Vsdl.SoftwareInstallation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSoftwareInstallation
entryRuleSoftwareInstallation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSoftwareInstallationRule()); }
	iv_ruleSoftwareInstallation=ruleSoftwareInstallation
	{ $current=$iv_ruleSoftwareInstallation.current; }
	EOF;

// Rule SoftwareInstallation
ruleSoftwareInstallation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_softwareID_0_0=RULE_ID
				{
					newLeafNode(lv_softwareID_0_0, grammarAccess.getSoftwareInstallationAccess().getSoftwareIDIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSoftwareInstallationRule());
					}
					setWithLastConsumed(
						$current,
						"softwareID",
						lv_softwareID_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='version'
			{
				newLeafNode(otherlv_1, grammarAccess.getSoftwareInstallationAccess().getVersionKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSoftwareInstallationAccess().getVersionVersionNumberParserRuleCall_1_1_0());
					}
					lv_version_2_0=ruleVersionNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSoftwareInstallationRule());
						}
						set(
							$current,
							"version",
							lv_version_2_0,
							"it.csec.xtext.Vsdl.VersionNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='with'
			{
				newLeafNode(otherlv_3, grammarAccess.getSoftwareInstallationAccess().getWithKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSoftwareInstallationAccess().getDependenciesSoftwareDependencyParserRuleCall_2_1_0());
					}
					lv_dependencies_4_0=ruleSoftwareDependency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSoftwareInstallationRule());
						}
						add(
							$current,
							"dependencies",
							lv_dependencies_4_0,
							"it.csec.xtext.Vsdl.SoftwareDependency");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getSoftwareInstallationAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSoftwareInstallationAccess().getDependenciesSoftwareDependencyParserRuleCall_2_2_1_0());
						}
						lv_dependencies_6_0=ruleSoftwareDependency
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSoftwareInstallationRule());
							}
							add(
								$current,
								"dependencies",
								lv_dependencies_6_0,
								"it.csec.xtext.Vsdl.SoftwareDependency");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_7='config'
			{
				newLeafNode(otherlv_7, grammarAccess.getSoftwareInstallationAccess().getConfigKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSoftwareInstallationAccess().getConfigConfigOptionsParserRuleCall_3_1_0());
					}
					lv_config_8_0=ruleConfigOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSoftwareInstallationRule());
						}
						set(
							$current,
							"config",
							lv_config_8_0,
							"it.csec.xtext.Vsdl.ConfigOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleVersionNumber
entryRuleVersionNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVersionNumberRule()); }
	iv_ruleVersionNumber=ruleVersionNumber
	{ $current=$iv_ruleVersionNumber.current.getText(); }
	EOF;

// Rule VersionNumber
ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleSoftwareDependency
entryRuleSoftwareDependency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSoftwareDependencyRule()); }
	iv_ruleSoftwareDependency=ruleSoftwareDependency
	{ $current=$iv_ruleSoftwareDependency.current; }
	EOF;

// Rule SoftwareDependency
ruleSoftwareDependency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_dependencyID_0_0=RULE_ID
			{
				newLeafNode(lv_dependencyID_0_0, grammarAccess.getSoftwareDependencyAccess().getDependencyIDIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSoftwareDependencyRule());
				}
				setWithLastConsumed(
					$current,
					"dependencyID",
					lv_dependencyID_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleConfigOptions
entryRuleConfigOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigOptionsRule()); }
	iv_ruleConfigOptions=ruleConfigOptions
	{ $current=$iv_ruleConfigOptions.current; }
	EOF;

// Rule ConfigOptions
ruleConfigOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigOptionsAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigOptionsAccess().getConfigPairsConfigPairParserRuleCall_1_0());
				}
				lv_configPairs_1_0=ruleConfigPair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigOptionsRule());
					}
					add(
						$current,
						"configPairs",
						lv_configPairs_1_0,
						"it.csec.xtext.Vsdl.ConfigPair");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getConfigOptionsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigOptionsAccess().getConfigPairsConfigPairParserRuleCall_2_1_0());
					}
					lv_configPairs_3_0=ruleConfigPair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigOptionsRule());
						}
						add(
							$current,
							"configPairs",
							lv_configPairs_3_0,
							"it.csec.xtext.Vsdl.ConfigPair");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getConfigOptionsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleConfigPair
entryRuleConfigPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigPairRule()); }
	iv_ruleConfigPair=ruleConfigPair
	{ $current=$iv_ruleConfigPair.current; }
	EOF;

// Rule ConfigPair
ruleConfigPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getConfigPairAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigPairRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigPairAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getConfigPairAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigPairRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleNetwork
entryRuleNetwork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkRule()); }
	iv_ruleNetwork=ruleNetwork
	{ $current=$iv_ruleNetwork.current; }
	EOF;

// Rule Network
ruleNetwork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='network'
		{
			newLeafNode(otherlv_0, grammarAccess.getNetworkAccess().getNetworkKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNetworkAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNetworkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkAccess().getConstraintsNetworkConstraintParserRuleCall_3_0());
				}
				lv_constraints_3_0=ruleNetworkConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_3_0,
						"it.csec.xtext.Vsdl.NetworkConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNetworkConstraint
entryRuleNetworkConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkConstraintRule()); }
	iv_ruleNetworkConstraint=ruleNetworkConstraint
	{ $current=$iv_ruleNetworkConstraint.current; }
	EOF;

// Rule NetworkConstraint
ruleNetworkConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNetworkConstraintAccess().getGuardedNetworkConstraintParserRuleCall_0_0());
			}
			this_GuardedNetworkConstraint_0=ruleGuardedNetworkConstraint
			{
				$current = $this_GuardedNetworkConstraint_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getNetworkConstraintAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getNetworkConstraintAccess().getSimpleNetworkConstraintParserRuleCall_1_0());
			}
			this_SimpleNetworkConstraint_2=ruleSimpleNetworkConstraint
			{
				$current = $this_SimpleNetworkConstraint_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getNetworkConstraintAccess().getSemicolonKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleGuardedNetworkConstraint
entryRuleGuardedNetworkConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuardedNetworkConstraintRule()); }
	iv_ruleGuardedNetworkConstraint=ruleGuardedNetworkConstraint
	{ $current=$iv_ruleGuardedNetworkConstraint.current; }
	EOF;

// Rule GuardedNetworkConstraint
ruleGuardedNetworkConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getGuardedNetworkConstraintAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGuardedNetworkConstraintAccess().getNetworktriggerconstraintUpdateTriggerConstraintParserRuleCall_1_0());
				}
				lv_networktriggerconstraint_1_0=ruleUpdateTriggerConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGuardedNetworkConstraintRule());
					}
					set(
						$current,
						"networktriggerconstraint",
						lv_networktriggerconstraint_1_0,
						"it.csec.xtext.Vsdl.UpdateTriggerConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getGuardedNetworkConstraintAccess().getRightSquareBracketKeyword_2());
		}
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getGuardedNetworkConstraintAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGuardedNetworkConstraintAccess().getNetworkconstraintSimpleNetworkConstraintParserRuleCall_4_0());
				}
				lv_networkconstraint_4_0=ruleSimpleNetworkConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGuardedNetworkConstraintRule());
					}
					set(
						$current,
						"networkconstraint",
						lv_networkconstraint_4_0,
						"it.csec.xtext.Vsdl.SimpleNetworkConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleNetworkConstraint
entryRuleSimpleNetworkConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNetworkConstraintRule()); }
	iv_ruleSimpleNetworkConstraint=ruleSimpleNetworkConstraint
	{ $current=$iv_ruleSimpleNetworkConstraint.current; }
	EOF;

// Rule SimpleNetworkConstraint
ruleSimpleNetworkConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSimpleNetworkConstraintAccess().getSimpleNetworkConstraintAndOrParserRuleCall());
	}
	this_SimpleNetworkConstraintAndOr_0=ruleSimpleNetworkConstraintAndOr
	{
		$current = $this_SimpleNetworkConstraintAndOr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSimpleNetworkConstraintAndOr
entryRuleSimpleNetworkConstraintAndOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNetworkConstraintAndOrRule()); }
	iv_ruleSimpleNetworkConstraintAndOr=ruleSimpleNetworkConstraintAndOr
	{ $current=$iv_ruleSimpleNetworkConstraintAndOr.current; }
	EOF;

// Rule SimpleNetworkConstraintAndOr
ruleSimpleNetworkConstraintAndOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getSimpleNetworkConstraintNotParserRuleCall_0());
		}
		this_SimpleNetworkConstraintNot_0=ruleSimpleNetworkConstraintNot
		{
			$current = $this_SimpleNetworkConstraintNot_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getSimpleNetworkConstraintAndOrAccess().getAndOrLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='and'
							{
								newLeafNode(lv_op_2_1, grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSimpleNetworkConstraintAndOrRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='or'
							{
								newLeafNode(lv_op_2_2, grammarAccess.getSimpleNetworkConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSimpleNetworkConstraintAndOrRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleNetworkConstraintAndOrAccess().getRightSimpleNetworkConstraintNotParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleSimpleNetworkConstraintNot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleNetworkConstraintAndOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"it.csec.xtext.Vsdl.SimpleNetworkConstraintNot");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSimpleNetworkConstraintNot
entryRuleSimpleNetworkConstraintNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNetworkConstraintNotRule()); }
	iv_ruleSimpleNetworkConstraintNot=ruleSimpleNetworkConstraintNot
	{ $current=$iv_ruleSimpleNetworkConstraintNot.current; }
	EOF;

// Rule SimpleNetworkConstraintNot
ruleSimpleNetworkConstraintNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSimpleNetworkConstraintNotAccess().getNotAction_0_0(),
						$current);
				}
			)
			(
				('not')=>
				otherlv_1='not'
				{
					newLeafNode(otherlv_1, grammarAccess.getSimpleNetworkConstraintNotAccess().getNotKeyword_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleNetworkConstraintNotAccess().getConstraintSimpleNetworkConstraintAParserRuleCall_0_2_0());
					}
					lv_constraint_2_0=ruleSimpleNetworkConstraintA
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleNetworkConstraintNotRule());
						}
						set(
							$current,
							"constraint",
							lv_constraint_2_0,
							"it.csec.xtext.Vsdl.SimpleNetworkConstraintA");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimpleNetworkConstraintNotAccess().getSimpleNetworkConstraintAParserRuleCall_1());
		}
		this_SimpleNetworkConstraintA_3=ruleSimpleNetworkConstraintA
		{
			$current = $this_SimpleNetworkConstraintA_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleNetworkConstraintA
entryRuleSimpleNetworkConstraintA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleNetworkConstraintARule()); }
	iv_ruleSimpleNetworkConstraintA=ruleSimpleNetworkConstraintA
	{ $current=$iv_ruleSimpleNetworkConstraintA.current; }
	EOF;

// Rule SimpleNetworkConstraintA
ruleSimpleNetworkConstraintA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getSimpleNetworkConstraintAAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getSimpleNetworkConstraintAAccess().getSimpleNetworkConstraintParserRuleCall_0_1());
			}
			this_SimpleNetworkConstraint_1=ruleSimpleNetworkConstraint
			{
				$current = $this_SimpleNetworkConstraint_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getSimpleNetworkConstraintAAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimpleNetworkConstraintAAccess().getNetworkGatewayConstraintParserRuleCall_1());
		}
		this_NetworkGatewayConstraint_3=ruleNetworkGatewayConstraint
		{
			$current = $this_NetworkGatewayConstraint_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleNetworkConstraintAAccess().getNetworkParticipantsConstraintParserRuleCall_2());
		}
		this_NetworkParticipantsConstraint_4=ruleNetworkParticipantsConstraint
		{
			$current = $this_NetworkParticipantsConstraint_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNetworkGatewayConstraint
entryRuleNetworkGatewayConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkGatewayConstraintRule()); }
	iv_ruleNetworkGatewayConstraint=ruleNetworkGatewayConstraint
	{ $current=$iv_ruleNetworkGatewayConstraint.current; }
	EOF;

// Rule NetworkGatewayConstraint
ruleNetworkGatewayConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNetworkGatewayConstraintAccess().getIPRangeAction_0_0(),
						$current);
				}
			)
			(
				('addresses')=>
				otherlv_1='addresses'
				{
					newLeafNode(otherlv_1, grammarAccess.getNetworkGatewayConstraintAccess().getAddressesKeyword_0_1());
				}
			)
			otherlv_2='range'
			{
				newLeafNode(otherlv_2, grammarAccess.getNetworkGatewayConstraintAccess().getRangeKeyword_0_2());
			}
			otherlv_3='is'
			{
				newLeafNode(otherlv_3, grammarAccess.getNetworkGatewayConstraintAccess().getIsKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkGatewayConstraintAccess().getRangeIPRangeAParserRuleCall_0_4_0());
					}
					lv_range_4_0=ruleIPRangeA
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkGatewayConstraintRule());
						}
						set(
							$current,
							"range",
							lv_range_4_0,
							"it.csec.xtext.Vsdl.IPRangeA");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNetworkGatewayConstraintAccess().getGatewayAction_1_0(),
						$current);
				}
			)
			(
				('gateway')=>
				otherlv_6='gateway'
				{
					newLeafNode(otherlv_6, grammarAccess.getNetworkGatewayConstraintAccess().getGatewayKeyword_1_1());
				}
			)
			otherlv_7='has'
			{
				newLeafNode(otherlv_7, grammarAccess.getNetworkGatewayConstraintAccess().getHasKeyword_1_2());
			}
			otherlv_8='direct'
			{
				newLeafNode(otherlv_8, grammarAccess.getNetworkGatewayConstraintAccess().getDirectKeyword_1_3());
			}
			otherlv_9='access'
			{
				newLeafNode(otherlv_9, grammarAccess.getNetworkGatewayConstraintAccess().getAccessKeyword_1_4());
			}
			otherlv_10='to'
			{
				newLeafNode(otherlv_10, grammarAccess.getNetworkGatewayConstraintAccess().getToKeyword_1_5());
			}
			otherlv_11='the'
			{
				newLeafNode(otherlv_11, grammarAccess.getNetworkGatewayConstraintAccess().getTheKeyword_1_6());
			}
			(
				(
					lv_internet_12_0='Internet'
					{
						newLeafNode(lv_internet_12_0, grammarAccess.getNetworkGatewayConstraintAccess().getInternetInternetKeyword_1_7_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNetworkGatewayConstraintRule());
						}
						setWithLastConsumed($current, "internet", lv_internet_12_0 != null, "Internet");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNetworkParticipantsConstraint
entryRuleNetworkParticipantsConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkParticipantsConstraintRule()); }
	iv_ruleNetworkParticipantsConstraint=ruleNetworkParticipantsConstraint
	{ $current=$iv_ruleNetworkParticipantsConstraint.current; }
	EOF;

// Rule NetworkParticipantsConstraint
ruleNetworkParticipantsConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='node'
			{
				newLeafNode(otherlv_0, grammarAccess.getNetworkParticipantsConstraintAccess().getNodeKeyword_0_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNetworkParticipantsConstraintRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeCrossReference_0_1_0());
					}
				)
			)
			otherlv_2='is'
			{
				newLeafNode(otherlv_2, grammarAccess.getNetworkParticipantsConstraintAccess().getIsKeyword_0_2());
			}
			(
				(
					lv_op_3_0='connected'
					{
						newLeafNode(lv_op_3_0, grammarAccess.getNetworkParticipantsConstraintAccess().getOpConnectedKeyword_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNetworkParticipantsConstraintRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_0, "connected");
					}
				)
			)
		)
		    |
		(
			otherlv_4='node'
			{
				newLeafNode(otherlv_4, grammarAccess.getNetworkParticipantsConstraintAccess().getNodeKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNetworkParticipantsConstraintRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getNetworkParticipantsConstraintAccess().getIdNodeCrossReference_1_1_0());
					}
				)
			)
			otherlv_6='has'
			{
				newLeafNode(otherlv_6, grammarAccess.getNetworkParticipantsConstraintAccess().getHasKeyword_1_2());
			}
			(
				(
					lv_op_7_0='IP'
					{
						newLeafNode(lv_op_7_0, grammarAccess.getNetworkParticipantsConstraintAccess().getOpIPKeyword_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNetworkParticipantsConstraintRule());
						}
						setWithLastConsumed($current, "op", lv_op_7_0, "IP");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkParticipantsConstraintAccess().getIpIPAddressParserRuleCall_1_4_0());
					}
					lv_ip_8_0=ruleIPAddress
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkParticipantsConstraintRule());
						}
						set(
							$current,
							"ip",
							lv_ip_8_0,
							"it.csec.xtext.Vsdl.IPAddress");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUpdateTriggerConstraint
entryRuleUpdateTriggerConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateTriggerConstraintRule()); }
	iv_ruleUpdateTriggerConstraint=ruleUpdateTriggerConstraint
	{ $current=$iv_ruleUpdateTriggerConstraint.current; }
	EOF;

// Rule UpdateTriggerConstraint
ruleUpdateTriggerConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getUpdateTriggerConstraintAccess().getUpdateTriggerConstraintAndOrParserRuleCall());
	}
	this_UpdateTriggerConstraintAndOr_0=ruleUpdateTriggerConstraintAndOr
	{
		$current = $this_UpdateTriggerConstraintAndOr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleUpdateTriggerConstraintAndOr
entryRuleUpdateTriggerConstraintAndOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateTriggerConstraintAndOrRule()); }
	iv_ruleUpdateTriggerConstraintAndOr=ruleUpdateTriggerConstraintAndOr
	{ $current=$iv_ruleUpdateTriggerConstraintAndOr.current; }
	EOF;

// Rule UpdateTriggerConstraintAndOr
ruleUpdateTriggerConstraintAndOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getUpdateTriggerConstraintNotParserRuleCall_0());
		}
		this_UpdateTriggerConstraintNot_0=ruleUpdateTriggerConstraintNot
		{
			$current = $this_UpdateTriggerConstraintNot_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getUpdateTriggerConstraintAndOrAccess().getAndOrLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='and'
							{
								newLeafNode(lv_op_2_1, grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpAndKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUpdateTriggerConstraintAndOrRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='or'
							{
								newLeafNode(lv_op_2_2, grammarAccess.getUpdateTriggerConstraintAndOrAccess().getOpOrKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUpdateTriggerConstraintAndOrRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateTriggerConstraintAndOrAccess().getRightUpdateTriggerConstraintNotParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleUpdateTriggerConstraintNot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateTriggerConstraintAndOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"it.csec.xtext.Vsdl.UpdateTriggerConstraintNot");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUpdateTriggerConstraintNot
entryRuleUpdateTriggerConstraintNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateTriggerConstraintNotRule()); }
	iv_ruleUpdateTriggerConstraintNot=ruleUpdateTriggerConstraintNot
	{ $current=$iv_ruleUpdateTriggerConstraintNot.current; }
	EOF;

// Rule UpdateTriggerConstraintNot
ruleUpdateTriggerConstraintNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUpdateTriggerConstraintNotAccess().getNotAction_0_0(),
						$current);
				}
			)
			(
				('not')=>
				otherlv_1='not'
				{
					newLeafNode(otherlv_1, grammarAccess.getUpdateTriggerConstraintNotAccess().getNotKeyword_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateTriggerConstraintNotAccess().getConstraintUpdateTriggerConstraintAParserRuleCall_0_2_0());
					}
					lv_constraint_2_0=ruleUpdateTriggerConstraintA
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateTriggerConstraintNotRule());
						}
						set(
							$current,
							"constraint",
							lv_constraint_2_0,
							"it.csec.xtext.Vsdl.UpdateTriggerConstraintA");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getUpdateTriggerConstraintNotAccess().getUpdateTriggerConstraintAParserRuleCall_1());
		}
		this_UpdateTriggerConstraintA_3=ruleUpdateTriggerConstraintA
		{
			$current = $this_UpdateTriggerConstraintA_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUpdateTriggerConstraintA
entryRuleUpdateTriggerConstraintA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateTriggerConstraintARule()); }
	iv_ruleUpdateTriggerConstraintA=ruleUpdateTriggerConstraintA
	{ $current=$iv_ruleUpdateTriggerConstraintA.current; }
	EOF;

// Rule UpdateTriggerConstraintA
ruleUpdateTriggerConstraintA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getUpdateTriggerConstraintAAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getUpdateTriggerConstraintAAccess().getUpdateTriggerConstraintParserRuleCall_0_1());
			}
			this_UpdateTriggerConstraint_1=ruleUpdateTriggerConstraint
			{
				$current = $this_UpdateTriggerConstraint_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getUpdateTriggerConstraintAAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUpdateTriggerConstraintAAccess().getAtAction_1_0(),
						$current);
				}
			)
			(
				('at')=>
				otherlv_4='at'
				{
					newLeafNode(otherlv_4, grammarAccess.getUpdateTriggerConstraintAAccess().getAtKeyword_1_1());
				}
			)
			(
				(
					lv_op_5_0='least'
					{
						newLeafNode(lv_op_5_0, grammarAccess.getUpdateTriggerConstraintAAccess().getOpLeastKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateTriggerConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_5_0, "least");
					}
				)
			)
			otherlv_6='after'
			{
				newLeafNode(otherlv_6, grammarAccess.getUpdateTriggerConstraintAAccess().getAfterKeyword_1_3());
			}
			(
				(
					lv_variable_7_0=RULE_ID
					{
						newLeafNode(lv_variable_7_0, grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateTriggerConstraintARule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_1_6_0());
					}
					lv_texp_9_0=ruleTimeExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateTriggerConstraintARule());
						}
						set(
							$current,
							"texp",
							lv_texp_9_0,
							"it.csec.xtext.Vsdl.TimeExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUpdateTriggerConstraintAAccess().getAtAction_2_0(),
						$current);
				}
			)
			(
				('at')=>
				otherlv_11='at'
				{
					newLeafNode(otherlv_11, grammarAccess.getUpdateTriggerConstraintAAccess().getAtKeyword_2_1());
				}
			)
			(
				(
					lv_op_12_0='most'
					{
						newLeafNode(lv_op_12_0, grammarAccess.getUpdateTriggerConstraintAAccess().getOpMostKeyword_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateTriggerConstraintARule());
						}
						setWithLastConsumed($current, "op", lv_op_12_0, "most");
					}
				)
			)
			otherlv_13='before'
			{
				newLeafNode(otherlv_13, grammarAccess.getUpdateTriggerConstraintAAccess().getBeforeKeyword_2_3());
			}
			(
				(
					lv_variable_14_0=RULE_ID
					{
						newLeafNode(lv_variable_14_0, grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_2_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateTriggerConstraintARule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_14_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_15='='
			{
				newLeafNode(otherlv_15, grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_2_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_2_6_0());
					}
					lv_texp_16_0=ruleTimeExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateTriggerConstraintARule());
						}
						set(
							$current,
							"texp",
							lv_texp_16_0,
							"it.csec.xtext.Vsdl.TimeExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUpdateTriggerConstraintAAccess().getSwitchAction_3_0(),
						$current);
				}
			)
			(
				('switch')=>
				otherlv_18='switch'
				{
					newLeafNode(otherlv_18, grammarAccess.getUpdateTriggerConstraintAAccess().getSwitchKeyword_3_1());
				}
			)
			otherlv_19='after'
			{
				newLeafNode(otherlv_19, grammarAccess.getUpdateTriggerConstraintAAccess().getAfterKeyword_3_2());
			}
			(
				(
					lv_variable_20_0=RULE_ID
					{
						newLeafNode(lv_variable_20_0, grammarAccess.getUpdateTriggerConstraintAAccess().getVariableIDTerminalRuleCall_3_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateTriggerConstraintARule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_20_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_21='='
			{
				newLeafNode(otherlv_21, grammarAccess.getUpdateTriggerConstraintAAccess().getEqualsSignKeyword_3_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateTriggerConstraintAAccess().getTexpTimeExprParserRuleCall_3_5_0());
					}
					lv_texp_22_0=ruleTimeExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateTriggerConstraintARule());
						}
						set(
							$current,
							"texp",
							lv_texp_22_0,
							"it.csec.xtext.Vsdl.TimeExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTimeExpr
entryRuleTimeExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeExprRule()); }
	iv_ruleTimeExpr=ruleTimeExpr
	{ $current=$iv_ruleTimeExpr.current; }
	EOF;

// Rule TimeExpr
ruleTimeExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTimeExprAccess().getTimeExprAdditionParserRuleCall());
	}
	this_TimeExprAddition_0=ruleTimeExprAddition
	{
		$current = $this_TimeExprAddition_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleTimeExprAddition
entryRuleTimeExprAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeExprAdditionRule()); }
	iv_ruleTimeExprAddition=ruleTimeExprAddition
	{ $current=$iv_ruleTimeExprAddition.current; }
	EOF;

// Rule TimeExprAddition
ruleTimeExprAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimeExprAdditionAccess().getTimeExprMultiplicationParserRuleCall_0());
		}
		this_TimeExprMultiplication_0=ruleTimeExprMultiplication
		{
			$current = $this_TimeExprMultiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getTimeExprAdditionAccess().getPlusMinusLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1='+'
							{
								newLeafNode(lv_op_2_1, grammarAccess.getTimeExprAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTimeExprAdditionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2='-'
							{
								newLeafNode(lv_op_2_2, grammarAccess.getTimeExprAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTimeExprAdditionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTimeExprAdditionAccess().getRightTimeExprMultiplicationParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleTimeExprMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimeExprAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"it.csec.xtext.Vsdl.TimeExprMultiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTimeExprMultiplication
entryRuleTimeExprMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeExprMultiplicationRule()); }
	iv_ruleTimeExprMultiplication=ruleTimeExprMultiplication
	{ $current=$iv_ruleTimeExprMultiplication.current; }
	EOF;

// Rule TimeExprMultiplication
ruleTimeExprMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimeExprMultiplicationAccess().getTimeExprAParserRuleCall_0());
		}
		this_TimeExprA_0=ruleTimeExprA
		{
			$current = $this_TimeExprA_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getTimeExprMultiplicationAccess().getMultiplicationLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						lv_op_2_0='*'
						{
							newLeafNode(lv_op_2_0, grammarAccess.getTimeExprMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTimeExprMultiplicationRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_0, "*");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTimeExprMultiplicationAccess().getRightTimeExprAParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleTimeExprA
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimeExprMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"it.csec.xtext.Vsdl.TimeExprA");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTimeExprA
entryRuleTimeExprA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeExprARule()); }
	iv_ruleTimeExprA=ruleTimeExprA
	{ $current=$iv_ruleTimeExprA.current; }
	EOF;

// Rule TimeExprA
ruleTimeExprA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getTimeExprAAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getTimeExprAAccess().getTimeExprParserRuleCall_0_1());
			}
			this_TimeExpr_1=ruleTimeExpr
			{
				$current = $this_TimeExpr_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getTimeExprAAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				lv_variable_3_0=RULE_ID
				{
					newLeafNode(lv_variable_3_0, grammarAccess.getTimeExprAAccess().getVariableIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeExprARule());
					}
					setWithLastConsumed(
						$current,
						"variable",
						lv_variable_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeExprAAccess().getIntervalTimeIntervalParserRuleCall_2_0());
				}
				lv_interval_4_0=ruleTimeInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeExprARule());
					}
					set(
						$current,
						"interval",
						lv_interval_4_0,
						"it.csec.xtext.Vsdl.TimeInterval");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTimeInterval
entryRuleTimeInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeIntervalRule()); }
	iv_ruleTimeInterval=ruleTimeInterval
	{ $current=$iv_ruleTimeInterval.current; }
	EOF;

// Rule TimeInterval
ruleTimeInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getTimeIntervalAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTimeIntervalRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleCPUFrequency
entryRuleCPUFrequency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCPUFrequencyRule()); }
	iv_ruleCPUFrequency=ruleCPUFrequency
	{ $current=$iv_ruleCPUFrequency.current; }
	EOF;

// Rule CPUFrequency
ruleCPUFrequency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getCPUFrequencyAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCPUFrequencyRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_unit_1_1='MHz'
					{
						newLeafNode(lv_unit_1_1, grammarAccess.getCPUFrequencyAccess().getUnitMHzKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCPUFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_1, null);
					}
					    |
					lv_unit_1_2='GHz'
					{
						newLeafNode(lv_unit_1_2, grammarAccess.getCPUFrequencyAccess().getUnitGHzKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCPUFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_2, null);
					}
					    |
					lv_unit_1_3='THz'
					{
						newLeafNode(lv_unit_1_3, grammarAccess.getCPUFrequencyAccess().getUnitTHzKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCPUFrequencyRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_3, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDiskSize
entryRuleDiskSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskSizeRule()); }
	iv_ruleDiskSize=ruleDiskSize
	{ $current=$iv_ruleDiskSize.current; }
	EOF;

// Rule DiskSize
ruleDiskSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getDiskSizeAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskSizeRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_unit_1_1='MB'
					{
						newLeafNode(lv_unit_1_1, grammarAccess.getDiskSizeAccess().getUnitMBKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDiskSizeRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_1, null);
					}
					    |
					lv_unit_1_2='GB'
					{
						newLeafNode(lv_unit_1_2, grammarAccess.getDiskSizeAccess().getUnitGBKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDiskSizeRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_2, null);
					}
					    |
					lv_unit_1_3='TB'
					{
						newLeafNode(lv_unit_1_3, grammarAccess.getDiskSizeAccess().getUnitTBKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDiskSizeRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_3, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRamSize
entryRuleRamSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRamSizeRule()); }
	iv_ruleRamSize=ruleRamSize
	{ $current=$iv_ruleRamSize.current; }
	EOF;

// Rule RamSize
ruleRamSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getRamSizeAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRamSizeRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_unit_1_1='MB'
					{
						newLeafNode(lv_unit_1_1, grammarAccess.getRamSizeAccess().getUnitMBKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRamSizeRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_1, null);
					}
					    |
					lv_unit_1_2='GB'
					{
						newLeafNode(lv_unit_1_2, grammarAccess.getRamSizeAccess().getUnitGBKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRamSizeRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_2, null);
					}
					    |
					lv_unit_1_3='TB'
					{
						newLeafNode(lv_unit_1_3, grammarAccess.getRamSizeAccess().getUnitTBKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRamSizeRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_1_3, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleIPAddress
entryRuleIPAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIPAddressRule()); }
	iv_ruleIPAddress=ruleIPAddress
	{ $current=$iv_ruleIPAddress.current; }
	EOF;

// Rule IPAddress
ruleIPAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_octet1_0_0=RULE_INT
				{
					newLeafNode(lv_octet1_0_0, grammarAccess.getIPAddressAccess().getOctet1INTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIPAddressRule());
					}
					setWithLastConsumed(
						$current,
						"octet1",
						lv_octet1_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getIPAddressAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_octet2_2_0=RULE_INT
				{
					newLeafNode(lv_octet2_2_0, grammarAccess.getIPAddressAccess().getOctet2INTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIPAddressRule());
					}
					setWithLastConsumed(
						$current,
						"octet2",
						lv_octet2_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getIPAddressAccess().getFullStopKeyword_3());
		}
		(
			(
				lv_octet3_4_0=RULE_INT
				{
					newLeafNode(lv_octet3_4_0, grammarAccess.getIPAddressAccess().getOctet3INTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIPAddressRule());
					}
					setWithLastConsumed(
						$current,
						"octet3",
						lv_octet3_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getIPAddressAccess().getFullStopKeyword_5());
		}
		(
			(
				lv_octet4_6_0=RULE_INT
				{
					newLeafNode(lv_octet4_6_0, grammarAccess.getIPAddressAccess().getOctet4INTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIPAddressRule());
					}
					setWithLastConsumed(
						$current,
						"octet4",
						lv_octet4_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleIPRangeA
entryRuleIPRangeA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIPRangeARule()); }
	iv_ruleIPRangeA=ruleIPRangeA
	{ $current=$iv_ruleIPRangeA.current; }
	EOF;

// Rule IPRangeA
ruleIPRangeA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIPRangeAAccess().getAddressIPAddressParserRuleCall_0_0());
				}
				lv_address_0_0=ruleIPAddress
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIPRangeARule());
					}
					set(
						$current,
						"address",
						lv_address_0_0,
						"it.csec.xtext.Vsdl.IPAddress");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getIPRangeAAccess().getSolidusKeyword_1());
		}
		(
			(
				lv_bitmask_2_0=RULE_INT
				{
					newLeafNode(lv_bitmask_2_0, grammarAccess.getIPRangeAAccess().getBitmaskINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIPRangeARule());
					}
					setWithLastConsumed(
						$current,
						"bitmask",
						lv_bitmask_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleOSVersionE
entryRuleOSVersionE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOSVersionERule()); }
	iv_ruleOSVersionE=ruleOSVersionE
	{ $current=$iv_ruleOSVersionE.current.getText(); }
	EOF;

// Rule OSVersionE
ruleOSVersionE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='WindowsXP'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getWindowsXPKeyword_0());
		}
		    |
		kw='Windows7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getWindows7Keyword_1());
		}
		    |
		kw='Windows8'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getWindows8Keyword_2());
		}
		    |
		kw='Windows10'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getWindows10Keyword_3());
		}
		    |
		kw='Ubuntu14'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getUbuntu14Keyword_4());
		}
		    |
		kw='Ubuntu16'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getUbuntu16Keyword_5());
		}
		    |
		kw='Android-21'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getAndroid21Keyword_6());
		}
		    |
		kw='Android-19'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSVersionEAccess().getAndroid19Keyword_7());
		}
	)
;

// Entry rule entryRuleOSFamilyE
entryRuleOSFamilyE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOSFamilyERule()); }
	iv_ruleOSFamilyE=ruleOSFamilyE
	{ $current=$iv_ruleOSFamilyE.current.getText(); }
	EOF;

// Rule OSFamilyE
ruleOSFamilyE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Microsoft'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSFamilyEAccess().getMicrosoftKeyword_0());
		}
		    |
		kw='Linux'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSFamilyEAccess().getLinuxKeyword_1());
		}
		    |
		kw='OSx'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSFamilyEAccess().getOSxKeyword_2());
		}
		    |
		kw='iOS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSFamilyEAccess().getIOSKeyword_3());
		}
		    |
		kw='Android'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOSFamilyEAccess().getAndroidKeyword_4());
		}
	)
;

// Rule HardwareProfile
ruleHardwareProfile returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='tiny'
			{
				$current = grammarAccess.getHardwareProfileAccess().getTinyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHardwareProfileAccess().getTinyEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='medium'
			{
				$current = grammarAccess.getHardwareProfileAccess().getMediumEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHardwareProfileAccess().getMediumEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='large'
			{
				$current = grammarAccess.getHardwareProfileAccess().getLargeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHardwareProfileAccess().getLargeEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='mobile'
			{
				$current = grammarAccess.getHardwareProfileAccess().getMobileEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getHardwareProfileAccess().getMobileEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='wearable'
			{
				$current = grammarAccess.getHardwareProfileAccess().getWearableEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getHardwareProfileAccess().getWearableEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='sensor'
			{
				$current = grammarAccess.getHardwareProfileAccess().getSensorEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getHardwareProfileAccess().getSensorEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='server'
			{
				$current = grammarAccess.getHardwareProfileAccess().getServerEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getHardwareProfileAccess().getServerEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
