/**
 * generated by Xtext 2.35.0
 */
package it.csec.xtext.vsdl.impl;

import it.csec.xtext.vsdl.DNS;
import it.csec.xtext.vsdl.IPAddress;
import it.csec.xtext.vsdl.VsdlPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DNS</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.csec.xtext.vsdl.impl.DNSImpl#getDNSIP <em>DNSIP</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DNSImpl extends NodeConstraintImpl implements DNS
{
  /**
   * The cached value of the '{@link #getDNSIP() <em>DNSIP</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDNSIP()
   * @generated
   * @ordered
   */
  protected IPAddress dnsip;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DNSImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VsdlPackage.Literals.DNS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IPAddress getDNSIP()
  {
    return dnsip;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDNSIP(IPAddress newDNSIP, NotificationChain msgs)
  {
    IPAddress oldDNSIP = dnsip;
    dnsip = newDNSIP;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, VsdlPackage.DNS__DNSIP, oldDNSIP, newDNSIP);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDNSIP(IPAddress newDNSIP)
  {
    if (newDNSIP != dnsip)
    {
      NotificationChain msgs = null;
      if (dnsip != null)
        msgs = ((InternalEObject)dnsip).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - VsdlPackage.DNS__DNSIP, null, msgs);
      if (newDNSIP != null)
        msgs = ((InternalEObject)newDNSIP).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - VsdlPackage.DNS__DNSIP, null, msgs);
      msgs = basicSetDNSIP(newDNSIP, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VsdlPackage.DNS__DNSIP, newDNSIP, newDNSIP));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case VsdlPackage.DNS__DNSIP:
        return basicSetDNSIP(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VsdlPackage.DNS__DNSIP:
        return getDNSIP();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VsdlPackage.DNS__DNSIP:
        setDNSIP((IPAddress)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VsdlPackage.DNS__DNSIP:
        setDNSIP((IPAddress)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VsdlPackage.DNS__DNSIP:
        return dnsip != null;
    }
    return super.eIsSet(featureID);
  }

} //DNSImpl
