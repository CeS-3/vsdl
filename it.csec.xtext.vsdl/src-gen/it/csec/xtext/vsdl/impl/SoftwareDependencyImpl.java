/**
 * generated by Xtext 2.35.0
 */
package it.csec.xtext.vsdl.impl;

import it.csec.xtext.vsdl.SoftwareDependency;
import it.csec.xtext.vsdl.VsdlPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Software Dependency</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.csec.xtext.vsdl.impl.SoftwareDependencyImpl#getDependencyID <em>Dependency ID</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SoftwareDependencyImpl extends MinimalEObjectImpl.Container implements SoftwareDependency
{
  /**
   * The default value of the '{@link #getDependencyID() <em>Dependency ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependencyID()
   * @generated
   * @ordered
   */
  protected static final String DEPENDENCY_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDependencyID() <em>Dependency ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependencyID()
   * @generated
   * @ordered
   */
  protected String dependencyID = DEPENDENCY_ID_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SoftwareDependencyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VsdlPackage.Literals.SOFTWARE_DEPENDENCY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDependencyID()
  {
    return dependencyID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDependencyID(String newDependencyID)
  {
    String oldDependencyID = dependencyID;
    dependencyID = newDependencyID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VsdlPackage.SOFTWARE_DEPENDENCY__DEPENDENCY_ID, oldDependencyID, dependencyID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VsdlPackage.SOFTWARE_DEPENDENCY__DEPENDENCY_ID:
        return getDependencyID();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VsdlPackage.SOFTWARE_DEPENDENCY__DEPENDENCY_ID:
        setDependencyID((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VsdlPackage.SOFTWARE_DEPENDENCY__DEPENDENCY_ID:
        setDependencyID(DEPENDENCY_ID_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VsdlPackage.SOFTWARE_DEPENDENCY__DEPENDENCY_ID:
        return DEPENDENCY_ID_EDEFAULT == null ? dependencyID != null : !DEPENDENCY_ID_EDEFAULT.equals(dependencyID);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (dependencyID: ");
    result.append(dependencyID);
    result.append(')');
    return result.toString();
  }

} //SoftwareDependencyImpl
